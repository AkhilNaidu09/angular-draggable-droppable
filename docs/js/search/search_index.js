var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["4.0","8000","angular","angular/cor","angulardraggabledropp","app","auto","bootstrap","bundler","class","come","compon","console.log('el","content","continu","current","data","declar","demo","demoapp","demomodul","depend","dev","develop","directori","document","drag","draganddropmodul","draganddropmodule.forroot","dragend(ev","draggabl","drop","droppabl","droppable/demo","droppable/doc","droppablethen","droppeddata","environ","event","everyth","export","find","gener","get","here","https://mattlewis92.github.io/angular","import","index","instal","item","licens","local","match","mit","modul","namespac","ngmodul","node.j","npm","observ","onc","port","power","prepar","releas","releaselicens","reload","repo","result","run","save","selector","server","sourc","start","string","tabl","templat","test","test:watch","through","us","usag","view","without"],"overview.html":["2","5","direct","interfac","match","overview","result"],"changelog.html":["0.1.0","0.1.1","0.2.0","0.2.1","0.2.2","0.2.3","0.3.0","0.3.1","0.4.0","0.5.0","0.5.1","0.5.2","0.5.3","0.5.4","0.6.0","00f6989","01","03","04","06","09","1","1.0.0","1.0.1","1.0.2","10","11","12","14","16a3df8","17","17a2ccc","18","2","2016","2017","21","222914b","23","24","26cfa7e","27","3","3445337","38fd4b5","3c99d40","4","4.0","42631bc","44ea67","5","50d1962","52e9a22","5aca67d","6","6016f12","652d632","7","709327c","710c7f7","729f24e","73d65d7","7476301","7831903","7d859c1","8","9","9e5ac95","a77d07a","add","allow","angular","appli","auto","axi","back","bcc9080","be","bebd925","break","bug","c6771eb","case","caus","chang","changelog","click","close","commit","complet","compon","coordin","creat","cursor","d2fdcde","d7c9256","dc0f863","default","depend","destroy","dev","devic","didn't","direct","disabl","dispos","document","dont","drag","draganddropmodul","dragaxix","dragcontain","dragend","draggabl","dragsnapgrid","drop","droppabl","duplic","effect","element","emit","enter","error","event","f29b424","fb75711","featur","file","fire","firefox","fix","forroot","get","ghost","ghostdragen","grid","guidelin","higher","highlight","hover","icon","implement","import","improv","input","insid","interact","lazili","leav","librari","listen","lock","log","loosen","make","match","method","mimic","mous","move","mwldraggabl","mwldroppabl","nativ","ng4","notabl","now","observ","onc","option","origin","output","outsid","peer","perform","pointer","posit","prevent","project","remov","renam","requir","respect","result","revert","run","same","seamless","see","snap","snapgrid","standard","start","style","text","touch","until","upgrad","us","user","valid","validatedrag","version","work","wors","x","y","yourself","zone"],"license.html":["2016","abov","action","and/or","aris","associ","author","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","distribut","document","event","express","file","fit","follow","free","furnish","get","grant","herebi","holder","impli","includ","kind","lewi","liabil","liabl","licens","limit","match","matt","merchant","merg","mit","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","sell","shall","softwar","start","subject","sublicens","substanti","tort","us","warranti","whether","without"],"modules.html":["match","modul","result"],"directives/DraggableDirective.html":["0","angular/cor","boolean","candrag","chang","changes['dragaxi","checkeventlisten","class","clienti","clientx","const","constructor","coordin","currentdrag","currentdrag.complet","currentdrag.next","cursor","default","defin","delet","descript","direct","document","drag","dragaxi","dragend","draggabl","draggabledirect","draggablehelp","dragsnapgrid","dragstart","dropdata","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","file","filter","filter(([previ","flatmap((pointerdownev","ghostdragen","haseventlisten","helper.provid","hidden","implement","import","index","info","input","interfac","map(([previ","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","metadata","method","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","name","new","next","next.i","next.x","ngonchang","ngonchanges(chang","ngondestroy","ngoninit","ngzone","none","null","number","o","object.keys(this.eventlistenersubscriptions).foreach((typ","object.keys(this.eventlistenersubscriptions).length","observ","observable.merg","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","option","output","paramet","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pairwis","pointerdrag.take(1).map(valu","pointerev","pointermov","pointermove.takelast(1).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","previou","previous.i","previous.x","privat","public","render","renderer2","result","return","rxjs/add/observable/merg","rxjs/add/operator/map","rxjs/add/operator/mergemap","rxjs/add/operator/pairwis","rxjs/add/operator/shar","rxjs/add/operator/tak","rxjs/add/operator/takelast","rxjs/add/operator/takeuntil","rxjs/observ","rxjs/subject","selector","setcsstransform(valu","setcursor(valu","share","simplechang","snapgrid","sourc","src/draggable.directive.t","src/draggable.directive.ts:111","src/draggable.directive.ts:224","src/draggable.directive.ts:230","src/draggable.directive.ts:55","src/draggable.directive.ts:57","src/draggable.directive.ts:59","src/draggable.directive.ts:61","src/draggable.directive.ts:63","src/draggable.directive.ts:66","src/draggable.directive.ts:69","src/draggable.directive.ts:72","string","subject","subscrib","takeuntil(observable.merge(this.pointerup","this.candrag","this.checkeventlisten","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.draggablehelper.currentdrag.next(currentdrag","this.dragging.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.dropdata","this.element.nativeel","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.eventlistenersubscriptions[typ","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointermove.next(pointerdownev","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(move_cursor","this.setcursor(nul","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","true","type","unsubscribeeventlisten","validatedrag","valu","void","webkit","x","y","y}px","zone"],"directives/DroppableDirective.html":["angular/cor","boolean","clienti","clientrect","clientx","complet","const","constructor","constructor(el","currentdragdata","currentdragdropdata","currentdragsubscript","defin","descript","didoverlap","direct","do","drag","drag.flatmap","drag.map","dragent","draggabl","draggablehelp","dragleav","dragov","dragoveract","drop","dropdata","droppabledirect","droppablerectangl","element","elementref","event","eventemitt","fals","file","filter(([didoverlap","function","helper.provid","implement","import","index","info","interfac","iscoordinatewithinrectangl","match","metadata","method","mwldroppabl","name","new","ngondestroy","ngoninit","ngzone","number","observ","ondestroy","oninit","option","output","overlap","overlaps).subscrib","overlaps.distinctuntilchang","overlaps.filter(overlapsnow","overlapschang","overlapschanged.filter(overlapsnow","overlapsnow","overlapsnow).subscrib","pairwis","paramet","privat","properti","rect","rect.left","rect.top","result","return","rxj","rxjs/add/operator/distinctuntilchang","rxjs/add/operator/filt","rxjs/add/operator/pairwis","rxjs/observ","rxjs/subject","rxjs/subscript","see","selector","sourc","src/droppable.directive.t","src/droppable.directive.ts:128","src/droppable.directive.ts:39","src/droppable.directive.ts:41","src/droppable.directive.ts:43","src/droppable.directive.ts:45","src/droppable.directive.ts:47","src/droppable.directive.ts:55","subject","subscrib","subscript","there'","this.currentdragsubscript","this.currentdragsubscription.unsubscrib","this.dragenter.next","this.draggablehelper.currentdrag.subscrib","this.dragleave.next","this.dragover.next","this.drop.next","this.element.nativeelement.getboundingclientrect","this.zone.run","todo","true","type","via","void","way","zone"],"interfaces/Coordinates.html":["0","angular/cor","boolean","candrag","changes['dragaxi","checkeventlisten","class","clienti","clientx","const","constructor","coordin","currentdrag","currentdrag.complet","currentdrag.next","cursor","defin","delet","direct","document","drag","dragaxi","dragend","draggabl","draggabledirect","draggablehelp","dragsnapgrid","dragstart","dropdata","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","file","filter","filter(([previ","flatmap((pointerdownev","ghostdragen","haseventlisten","helper.provid","hidden","implement","import","index","info","input","interfac","map(([previ","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","new","next","next.i","next.x","ngonchanges(chang","ngondestroy","ngoninit","ngzone","none","null","number","o","object.keys(this.eventlistenersubscriptions).foreach((typ","object.keys(this.eventlistenersubscriptions).length","observ","observable.merg","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","output","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pairwis","pointerdrag.take(1).map(valu","pointerev","pointermov","pointermove.takelast(1).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","previou","previous.i","previous.x","privat","properti","public","render","renderer2","result","return","rxjs/add/observable/merg","rxjs/add/operator/map","rxjs/add/operator/mergemap","rxjs/add/operator/pairwis","rxjs/add/operator/shar","rxjs/add/operator/tak","rxjs/add/operator/takelast","rxjs/add/operator/takeuntil","rxjs/observ","rxjs/subject","selector","setcsstransform(valu","setcursor(valu","share","simplechang","snapgrid","sourc","src/draggable.directive.t","src/draggable.directive.ts:27","src/draggable.directive.ts:28","string","subject","subscrib","takeuntil(observable.merge(this.pointerup","this.candrag","this.checkeventlisten","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.draggablehelper.currentdrag.next(currentdrag","this.dragging.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.dropdata","this.element.nativeel","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.eventlistenersubscriptions[typ","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointermove.next(pointerdownev","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(move_cursor","this.setcursor(nul","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","true","type","unsubscribeeventlisten","validatedrag","valu","void","webkit","x","y","y}px","zone"],"interfaces/DragAxis.html":["0","angular/cor","boolean","candrag","changes['dragaxi","checkeventlisten","class","clienti","clientx","const","constructor","coordin","currentdrag","currentdrag.complet","currentdrag.next","cursor","defin","delet","direct","document","drag","dragaxi","dragend","draggabl","draggabledirect","draggablehelp","dragsnapgrid","dragstart","dropdata","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","file","filter","filter(([previ","flatmap((pointerdownev","ghostdragen","haseventlisten","helper.provid","hidden","implement","import","index","info","input","interfac","map(([previ","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","new","next","next.i","next.x","ngonchanges(chang","ngondestroy","ngoninit","ngzone","none","null","number","o","object.keys(this.eventlistenersubscriptions).foreach((typ","object.keys(this.eventlistenersubscriptions).length","observ","observable.merg","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","output","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pairwis","pointerdrag.take(1).map(valu","pointerev","pointermov","pointermove.takelast(1).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","previou","previous.i","previous.x","privat","properti","public","render","renderer2","result","return","rxjs/add/observable/merg","rxjs/add/operator/map","rxjs/add/operator/mergemap","rxjs/add/operator/pairwis","rxjs/add/operator/shar","rxjs/add/operator/tak","rxjs/add/operator/takelast","rxjs/add/operator/takeuntil","rxjs/observ","rxjs/subject","selector","setcsstransform(valu","setcursor(valu","share","simplechang","snapgrid","sourc","src/draggable.directive.t","src/draggable.directive.ts:32","src/draggable.directive.ts:33","string","subject","subscrib","takeuntil(observable.merge(this.pointerup","this.candrag","this.checkeventlisten","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.draggablehelper.currentdrag.next(currentdrag","this.dragging.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.dropdata","this.element.nativeel","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.eventlistenersubscriptions[typ","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointermove.next(pointerdownev","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(move_cursor","this.setcursor(nul","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","true","type","unsubscribeeventlisten","validatedrag","valu","void","webkit","x","y","y}px","zone"],"interfaces/DropData.html":["angular/cor","boolean","clienti","clientrect","clientx","complet","const","constructor","currentdragdata","currentdragdropdata","currentdragsubscript","defin","didoverlap","direct","do","drag","drag.flatmap","drag.map","draggabl","draggablehelp","dragleav","dragov","dragoveract","drop","dropdata","droppablerectangl","element","elementref","eventemitt","fals","file","filter(([didoverlap","function","helper.provid","import","index","info","interfac","iscoordinatewithinrectangl","match","new","ngondestroy","ngoninit","ngzone","number","observ","ondestroy","oninit","output","overlap","overlaps).subscrib","overlaps.distinctuntilchang","overlaps.filter(overlapsnow","overlapschang","overlapschanged.filter(overlapsnow","overlapsnow","overlapsnow).subscrib","pairwis","privat","properti","rect","rect.left","rect.top","result","return","rxj","rxjs/add/operator/distinctuntilchang","rxjs/add/operator/filt","rxjs/add/operator/pairwis","rxjs/observ","rxjs/subject","rxjs/subscript","see","sourc","src/droppable.directive.t","src/droppable.directive.ts:32","subject","subscrib","subscript","there'","this.currentdragsubscript","this.currentdragsubscription.unsubscrib","this.dragenter.next","this.draggablehelper.currentdrag.subscrib","this.dragleave.next","this.dragover.next","this.drop.next","this.element.nativeelement.getboundingclientrect","this.zone.run","todo","true","type","via","void","way","zone"],"interfaces/PointerEvent.html":["0","angular/cor","boolean","candrag","changes['dragaxi","checkeventlisten","class","clienti","clientx","const","constructor","coordin","currentdrag","currentdrag.complet","currentdrag.next","cursor","defin","delet","direct","document","drag","dragaxi","dragend","draggabl","draggabledirect","draggablehelp","dragsnapgrid","dragstart","dropdata","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","file","filter","filter(([previ","flatmap((pointerdownev","ghostdragen","haseventlisten","helper.provid","hidden","implement","import","index","info","input","interfac","map(([previ","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","new","next","next.i","next.x","ngonchanges(chang","ngondestroy","ngoninit","ngzone","none","null","number","o","object.keys(this.eventlistenersubscriptions).foreach((typ","object.keys(this.eventlistenersubscriptions).length","observ","observable.merg","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","output","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pairwis","pointerdrag.take(1).map(valu","pointerev","pointermov","pointermove.takelast(1).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","previou","previous.i","previous.x","privat","properti","public","render","renderer2","result","return","rxjs/add/observable/merg","rxjs/add/operator/map","rxjs/add/operator/mergemap","rxjs/add/operator/pairwis","rxjs/add/operator/shar","rxjs/add/operator/tak","rxjs/add/operator/takelast","rxjs/add/operator/takeuntil","rxjs/observ","rxjs/subject","selector","setcsstransform(valu","setcursor(valu","share","simplechang","snapgrid","sourc","src/draggable.directive.t","src/draggable.directive.ts:44","src/draggable.directive.ts:45","src/draggable.directive.ts:46","string","subject","subscrib","takeuntil(observable.merge(this.pointerup","this.candrag","this.checkeventlisten","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.draggablehelper.currentdrag.next(currentdrag","this.dragging.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.dropdata","this.element.nativeel","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.eventlistenersubscriptions[typ","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointermove.next(pointerdownev","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(move_cursor","this.setcursor(nul","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","true","type","unsubscribeeventlisten","validatedrag","valu","void","webkit","x","y","y}px","zone"],"interfaces/SnapGrid.html":["0","angular/cor","boolean","candrag","changes['dragaxi","checkeventlisten","class","clienti","clientx","const","constructor","coordin","currentdrag","currentdrag.complet","currentdrag.next","cursor","defin","delet","direct","document","drag","dragaxi","dragend","draggabl","draggabledirect","draggablehelp","dragsnapgrid","dragstart","dropdata","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","file","filter","filter(([previ","flatmap((pointerdownev","ghostdragen","haseventlisten","helper.provid","hidden","implement","import","index","info","input","interfac","map(([previ","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","new","next","next.i","next.x","ngonchanges(chang","ngondestroy","ngoninit","ngzone","none","null","number","o","object.keys(this.eventlistenersubscriptions).foreach((typ","object.keys(this.eventlistenersubscriptions).length","observ","observable.merg","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","output","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pairwis","pointerdrag.take(1).map(valu","pointerev","pointermov","pointermove.takelast(1).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","previou","previous.i","previous.x","privat","properti","public","render","renderer2","result","return","rxjs/add/observable/merg","rxjs/add/operator/map","rxjs/add/operator/mergemap","rxjs/add/operator/pairwis","rxjs/add/operator/shar","rxjs/add/operator/tak","rxjs/add/operator/takelast","rxjs/add/operator/takeuntil","rxjs/observ","rxjs/subject","selector","setcsstransform(valu","setcursor(valu","share","simplechang","snapgrid","sourc","src/draggable.directive.t","src/draggable.directive.ts:37","src/draggable.directive.ts:38","string","subject","subscrib","takeuntil(observable.merge(this.pointerup","this.candrag","this.checkeventlisten","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.draggablehelper.currentdrag.next(currentdrag","this.dragging.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.dropdata","this.element.nativeel","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.eventlistenersubscriptions[typ","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointermove.next(pointerdownev","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(move_cursor","this.setcursor(nul","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","true","type","unsubscribeeventlisten","validatedrag","valu","void","webkit","x","y","y}px","zone"],"miscellaneous/functions.html":["clienti","function","index","iscoordinatewithinrectangl","iscoordinatewithinrectangle(clientx","match","miscellan","rect","result","src/droppable.directive.t","undefin"],"miscellaneous/variables.html":["default","index","match","miscellan","move","move_cursor","result","src/draggable.directive.t","string","type","valu","variabl"],"miscellaneous/typealiases.html":["alias","index","match","miscellan","result","src/draggable.directive.t","type","typealias","validatedrag"]},"length":15},"tokenStore":{"root":{"0":{"0":{"docs":{},"f":{"6":{"9":{"8":{"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012165450121654502}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.009732360097323601}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}},"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008077544426494346},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00922509225092251},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00922509225092251},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.009057971014492754},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00922509225092251}},".":{"1":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"2":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"3":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"4":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"5":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"6":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"docs":{}}},"1":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.024330900243309004}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"6":{"docs":{},"a":{"3":{"docs":{},"d":{"docs":{},"f":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}}},"docs":{}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"a":{"2":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"docs":{}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"docs":{}}},"2":{"0":{"1":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.024330900243309004},"license.html":{"ref":"license.html","tf":0.01020408163265306}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.019464720194647202}}},"docs":{}},"docs":{}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"2":{"2":{"9":{"1":{"4":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"6":{"docs":{},"c":{"docs":{},"f":{"docs":{},"a":{"7":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"docs":{}}}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"3":{"4":{"4":{"5":{"3":{"3":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"docs":{},"f":{"docs":{},"d":{"4":{"docs":{},"b":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"docs":{}}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"c":{"9":{"9":{"docs":{},"d":{"4":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"4":{"2":{"6":{"3":{"1":{"docs":{},"b":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"docs":{}},"docs":{}},"docs":{}},"4":{"docs":{},"e":{"docs":{},"a":{"6":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"5":{"0":{"docs":{},"d":{"1":{"9":{"6":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"2":{"docs":{},"e":{"9":{"docs":{},"a":{"2":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"a":{"docs":{},"c":{"docs":{},"a":{"6":{"7":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"docs":{}},"docs":{}}}}},"6":{"0":{"1":{"6":{"docs":{},"f":{"1":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"5":{"2":{"docs":{},"d":{"6":{"3":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"7":{"0":{"9":{"3":{"2":{"7":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"docs":{},"c":{"7":{"docs":{},"f":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"9":{"docs":{},"f":{"2":{"4":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"docs":{}},"docs":{}}},"docs":{}},"3":{"docs":{},"d":{"6":{"5":{"docs":{},"d":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"docs":{}},"docs":{}}},"4":{"7":{"6":{"3":{"0":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"3":{"1":{"9":{"0":{"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"d":{"8":{"5":{"9":{"docs":{},"c":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"8":{"0":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}},"docs":{}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"e":{"5":{"docs":{},"a":{"docs":{},"c":{"9":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{},"a":{"7":{"7":{"docs":{},"d":{"0":{"7":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.027586206896551724},"changelog.html":{"ref":"changelog.html","tf":0.009732360097323601}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"d":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.014598540145985401}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012165450121654502}}}}},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08333333333333333}}}}}},"x":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.012924071082390954},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.012915129151291513},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.02029520295202952},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.012681159420289856},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.012915129151291513}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.029197080291970802}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"c":{"docs":{},"c":{"9":{"0":{"8":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"b":{"docs":{},"d":{"9":{"2":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.009732360097323601}}}}}}},"c":{"6":{"7":{"7":{"1":{"docs":{},"e":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.01615508885298869},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.020161290322580645},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01845018450184502},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.01845018450184502},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.028735632183908046},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.02355072463768116},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01845018450184502},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0625}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.01615508885298869},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.024193548387096774},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01845018450184502},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.01845018450184502},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.034482758620689655},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.02355072463768116},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01845018450184502}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0267639902676399}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}}}}}}}},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009693053311793215},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.012096774193548387},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01107011070110701},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.01107011070110701},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.017241379310344827},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.010869565217391304},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01107011070110701}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008077544426494346},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":5.011070110701107},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00922509225092251},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.009057971014492754},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00922509225092251}}}}}}},"p":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.04081632653061224}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.024193548387096774},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.034482758620689655}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"u":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006462035541195477},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.007380073800738007},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.007380073800738007},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007246376811594203},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.007380073800738007}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0170316301703163},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":3.333333333333333}}}}},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}}}},"d":{"2":{"docs":{},"f":{"docs":{},"d":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}}},"7":{"docs":{},"c":{"9":{"2":{"5":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.020689655172413793}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.020689655172413793}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.027586206896551724}}}}}},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705}}}}}},"i":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.017770597738287562},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.03225806451612903},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}}}}}}},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":5.004846526655896},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":5.008064516129032},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}}}},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}}},"o":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.020689655172413793},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008077544426494346},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00922509225092251},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00922509225092251},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.009057971014492754},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00922509225092251}}}}}}}},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.027586206896551724},"changelog.html":{"ref":"changelog.html","tf":0.0364963503649635},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009693053311793215},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":5.007380073800738},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258}}}}},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.027586206896551724},"changelog.html":{"ref":"changelog.html","tf":0.04866180048661801},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":5.003231017770598},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.028225806451612902},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.017241379310344827},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.012096774193548387},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}},"o":{"docs":{},"v":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.012096774193548387},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.022988505747126436}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.027586206896551724},"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.012096774193548387},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"changelog.html":{"ref":"changelog.html","tf":0.009732360097323601}},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":5.004032258064516}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006462035541195477},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.028225806451612902},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":5.063218390804598},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}},"c":{"0":{"docs":{},"f":{"8":{"6":{"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"changelog.html":{"ref":"changelog.html","tf":0.029197080291970802},"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.024232633279483037},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.02214022140221402},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.02214022140221402},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.02717391304347826},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.02214022140221402}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}},"docs":{}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.01615508885298869},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.04838709677419355},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.012915129151291513},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.012915129151291513},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.04597701149425287},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.012681159420289856},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.012915129151291513}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009693053311793215},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01107011070110701},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.01107011070110701},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.010869565217391304},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01107011070110701}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}},"f":{"2":{"9":{"docs":{},"b":{"4":{"2":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}},"l":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}},"(":{"docs":{},"(":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}},"f":{"docs":{},"o":{"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.031630170316301706}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"b":{"7":{"5":{"7":{"1":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0170316301703163}}}}}}},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.729166666666666}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.020689655172413793}},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"9":{"2":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006462035541195477},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.007380073800738007},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.007380073800738007},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007246376811594203},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.007380073800738007}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.020689655172413793},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.01938610662358643},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.03225806451612903},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.02214022140221402},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.02214022140221402},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.04597701149425287},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.021739130434782608},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.02214022140221402}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0625},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08333333333333333}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.04827586206896552}}}}},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006462035541195477},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":5.009225092250922},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":5.009225092250922},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":5.011494252873563},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":5.009057971014493},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":5.009225092250922}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.012924071082390954},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01107011070110701},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.01107011070110701},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.010869565217391304},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01107011070110701}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}},"f":{"docs":{},"o":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.125}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"x":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"license.html":{"ref":"license.html","tf":3.343537414965986}}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}},"a":{"docs":{},"z":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}}}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"w":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862},"overview.html":{"ref":"overview.html","tf":0.2222222222222222},"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801},"license.html":{"ref":"license.html","tf":0.02040816326530612},"modules.html":{"ref":"modules.html","tf":0.4},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.11764705882352941},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.16666666666666666}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"license.html":{"ref":"license.html","tf":0.02040816326530612}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.395833333333333},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.3921568627450975},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.4166666666666665}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"modules.html":{"ref":"modules.html","tf":10.2}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"u":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009693053311793215},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01107011070110701},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.01107011070110701},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.014492753623188406},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01107011070110701}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}},"v":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012165450121654502},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705}},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.17647058823529413}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}},"z":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"w":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}}}}}}}}}}},"s":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"g":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}},"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006462035541195477},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006462035541195477},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.05517241379310345}}}},"e":{"docs":{},"w":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.011308562197092083},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.012915129151291513},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.012915129151291513},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.022988505747126436},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.012681159420289856},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.012915129151291513}}},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009693053311793215},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01845018450184502},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.01107011070110701},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.022988505747126436},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.018115942028985508},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01845018450184502}}}}}}}},"o":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.012096774193548387},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.017241379310344827},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.11111111111111}}}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.012165450121654502},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009693053311793215},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.024193548387096774},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.007380073800738007},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.007380073800738007},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.022988505747126436},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007246376811594203},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.007380073800738007}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008077544426494346},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00922509225092251},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00922509225092251},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":5.010869565217392},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00922509225092251}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.024232633279483037},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.012096774193548387},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.027675276752767528},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.027675276752767528},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.017241379310344827},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.02717391304347826},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.027675276752767528}}}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}}}}}},"i":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"c":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}},"p":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862},"overview.html":{"ref":"overview.html","tf":0.2222222222222222},"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801},"license.html":{"ref":"license.html","tf":0.02040816326530612},"modules.html":{"ref":"modules.html","tf":0.4},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.125},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.11764705882352941},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.16666666666666666}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"e":{"docs":{},"r":{"2":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}},"docs":{}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.01615508885298869},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.012915129151291513},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.012915129151291513},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.012681159420289856},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.012915129151291513}}}}}},"c":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0625}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.041379310344827586},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"x":{"docs":{},"j":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}},"m":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862}}}}}},"a":{"docs":{},"m":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}}},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}},"t":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09183673469387756}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.347126436781609},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006462035541195477},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.007380073800738007},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.007380073800738007},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007246376811594203},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.007380073800738007},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.11764705882352941}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.009732360097323601},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":5.0055350553505535}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"r":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.014539579967689823},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.016605166051660517},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.016605166051660517},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.016304347826086956},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.016605166051660517}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"p":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006462035541195477},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08333333333333333}},"s":{"docs":{},":":{"1":{"1":{"1":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"docs":{}},"docs":{}},"2":{"2":{"4":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"docs":{}},"3":{"0":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"docs":{}},"7":{"docs":{"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018}}},"8":{"docs":{"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018}}},"docs":{}},"3":{"2":{"docs":{"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018}}},"3":{"docs":{"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018}}},"7":{"docs":{"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"8":{"docs":{"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"docs":{}},"4":{"4":{"docs":{"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507}}},"5":{"docs":{"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507}}},"6":{"docs":{"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507}}},"docs":{}},"5":{"5":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"7":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"9":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"docs":{}},"6":{"1":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"3":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"6":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"9":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"docs":{}},"7":{"2":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.0625}},"s":{"docs":{},":":{"1":{"2":{"8":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}},"docs":{}},"docs":{}},"3":{"2":{"docs":{"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}},"9":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}},"docs":{}},"4":{"1":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}},"3":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}},"5":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}},"7":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.008064516129032258}}},"docs":{}},"5":{"5":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}},"k":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.034482758620689655}},":":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.014539579967689823},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.016605166051660517},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.016605166051660517},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.016304347826086956},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.016605166051660517}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008077544426494346},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00922509225092251},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00922509225092251},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.009057971014492754},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00922509225092251}}}}},"u":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008077544426494346},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00922509225092251},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00922509225092251},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.009057971014492754},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00922509225092251}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.014539579967689823},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.016605166051660517},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.016605166051660517},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.016304347826086956},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.016605166051660517}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008077544426494346},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00922509225092251},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00922509225092251},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.009057971014492754},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00922509225092251}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"`":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004846526655896607},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.022988505747126436},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"'":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}}}},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.011308562197092083},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.012915129151291513},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.012915129151291513},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.016304347826086956},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.012915129151291513}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0032310177705977385},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0036900369003690036},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0036900369003690036},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0036231884057971015},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0036900369003690036}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"d":{"docs":{},"o":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008077544426494346},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00922509225092251},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00922509225092251},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.009057971014492754},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00922509225092251}}}}}}}}},"u":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008077544426494346},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.007380073800738007},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.007380073800738007},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007246376811594203},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.007380073800738007}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.01615508885298869},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.024193548387096774},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007246376811594203},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08333333333333333}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862},"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"license.html":{"ref":"license.html","tf":0.02040816326530612}},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931}}}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.1875}}}}}}}},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.004866180048661801}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.013793103448275862}}}},"a":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009693053311793215},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.005535055350553505},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.005535055350553505},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.005434782608695652},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.005535055350553505},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.25}}}}}}}}}}},"u":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.012924071082390954},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.012915129151291513},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.012915129151291513},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.012681159420289856},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.012915129151291513},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.725490196078431}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.04038772213247173},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.016129032258064516},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.04059040590405904},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.04059040590405904},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.011494252873563218},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.03985507246376811},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.04059040590405904}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.006896551724137931},"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0072992700729927005}}},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}}}}},"y":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.004032258064516129},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"e":{"docs":{},"b":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.01938610662358643},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.027675276752767528},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.027675276752767528},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.021739130434782608},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.027675276752767528}}},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.01938610662358643},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.027675276752767528},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.027675276752767528},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.021739130434782608},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.027675276752767528}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003}}}}}}}}},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0024330900243309003},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0016155088852988692},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.012096774193548387},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.0018450184501845018},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.0018450184501845018},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005747126436781609},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0018115942028985507},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.0018450184501845018}}}}}},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"length":1741},"corpusTokens":["0","0.1.0","0.1.1","0.2.0","0.2.1","0.2.2","0.2.3","0.3.0","0.3.1","0.4.0","0.5.0","0.5.1","0.5.2","0.5.3","0.5.4","0.6.0","00f6989","01","03","04","06","09","1","1.0.0","1.0.1","1.0.2","10","11","12","14","16a3df8","17","17a2ccc","18","2","2016","2017","21","222914b","23","24","26cfa7e","27","3","3445337","38fd4b5","3c99d40","4","4.0","42631bc","44ea67","5","50d1962","52e9a22","5aca67d","6","6016f12","652d632","7","709327c","710c7f7","729f24e","73d65d7","7476301","7831903","7d859c1","8","8000","9","9e5ac95","a77d07a","abov","action","add","alias","allow","and/or","angular","angular/cor","angulardraggabledropp","app","appli","aris","associ","author","auto","axi","back","bcc9080","be","bebd925","boolean","bootstrap","break","bug","bundler","c","c6771eb","candrag","case","caus","chang","changelog","changes['dragaxi","charg","checkeventlisten","claim","class","click","clienti","clientrect","clientx","close","come","commit","complet","compon","condit","connect","console.log('el","const","constructor","constructor(el","content","continu","contract","coordin","copi","copyright","creat","current","currentdrag","currentdrag.complet","currentdrag.next","currentdragdata","currentdragdropdata","currentdragsubscript","cursor","d2fdcde","d7c9256","damag","data","dc0f863","deal","declar","default","defin","delet","demo","demoapp","demomodul","depend","descript","destroy","dev","develop","devic","didn't","didoverlap","direct","directori","disabl","dispos","distribut","do","document","dont","drag","drag.flatmap","drag.map","draganddropmodul","draganddropmodule.forroot","dragaxi","dragaxix","dragcontain","dragend","dragend(ev","dragent","draggabl","draggabledirect","draggablehelp","dragleav","dragov","dragoveract","dragsnapgrid","dragstart","drop","dropdata","droppabl","droppable/demo","droppable/doc","droppabledirect","droppablerectangl","droppablethen","droppeddata","duplic","effect","element","elementref","emit","enter","environ","error","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","everyth","export","express","f29b424","fals","fb75711","featur","file","filter","filter(([didoverlap","filter(([previ","find","fire","firefox","fit","fix","flatmap((pointerdownev","follow","forroot","free","function","furnish","gener","get","ghost","ghostdragen","grant","grid","guidelin","haseventlisten","helper.provid","here","herebi","hidden","higher","highlight","holder","hover","https://mattlewis92.github.io/angular","icon","implement","impli","import","improv","includ","index","info","input","insid","instal","interact","interfac","iscoordinatewithinrectangl","iscoordinatewithinrectangle(clientx","item","kind","lazili","leav","lewi","liabil","liabl","librari","licens","limit","listen","local","lock","log","loosen","make","map(([previ","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","matt","merchant","merg","metadata","method","mimic","miscellan","mit","modifi","modul","mous","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","mwldroppabl","name","namespac","nativ","new","next","next.i","next.x","ng4","ngmodul","ngonchang","ngonchanges(chang","ngondestroy","ngoninit","ngzone","node.j","none","noninfring","notabl","notic","now","npm","null","number","o","object.keys(this.eventlistenersubscriptions).foreach((typ","object.keys(this.eventlistenersubscriptions).length","observ","observable.merg","obtain","onc","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","option","origin","otherwis","out","output","outsid","overlap","overlaps).subscrib","overlaps.distinctuntilchang","overlaps.filter(overlapsnow","overlapschang","overlapschanged.filter(overlapsnow","overlapsnow","overlapsnow).subscrib","overview","pairwis","paramet","particular","peer","perform","permiss","permit","person","pointer","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pairwis","pointerdrag.take(1).map(valu","pointerev","pointermov","pointermove.takelast(1).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","port","portion","posit","power","prepar","prevent","previou","previous.i","previous.x","privat","project","properti","provid","public","publish","purpos","rect","rect.left","rect.top","releas","releaselicens","reload","remov","renam","render","renderer2","repo","requir","respect","restrict","result","return","revert","right","run","rxj","rxjs/add/observable/merg","rxjs/add/operator/distinctuntilchang","rxjs/add/operator/filt","rxjs/add/operator/map","rxjs/add/operator/mergemap","rxjs/add/operator/pairwis","rxjs/add/operator/shar","rxjs/add/operator/tak","rxjs/add/operator/takelast","rxjs/add/operator/takeuntil","rxjs/observ","rxjs/subject","rxjs/subscript","same","save","seamless","see","selector","sell","server","setcsstransform(valu","setcursor(valu","shall","share","simplechang","snap","snapgrid","softwar","sourc","src/draggable.directive.t","src/draggable.directive.ts:111","src/draggable.directive.ts:224","src/draggable.directive.ts:230","src/draggable.directive.ts:27","src/draggable.directive.ts:28","src/draggable.directive.ts:32","src/draggable.directive.ts:33","src/draggable.directive.ts:37","src/draggable.directive.ts:38","src/draggable.directive.ts:44","src/draggable.directive.ts:45","src/draggable.directive.ts:46","src/draggable.directive.ts:55","src/draggable.directive.ts:57","src/draggable.directive.ts:59","src/draggable.directive.ts:61","src/draggable.directive.ts:63","src/draggable.directive.ts:66","src/draggable.directive.ts:69","src/draggable.directive.ts:72","src/droppable.directive.t","src/droppable.directive.ts:128","src/droppable.directive.ts:32","src/droppable.directive.ts:39","src/droppable.directive.ts:41","src/droppable.directive.ts:43","src/droppable.directive.ts:45","src/droppable.directive.ts:47","src/droppable.directive.ts:55","standard","start","string","style","subject","sublicens","subscrib","subscript","substanti","tabl","takeuntil(observable.merge(this.pointerup","templat","test","test:watch","text","there'","this.candrag","this.checkeventlisten","this.currentdragsubscript","this.currentdragsubscription.unsubscrib","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.dragenter.next","this.draggablehelper.currentdrag.next(currentdrag","this.draggablehelper.currentdrag.subscrib","this.dragging.next","this.dragleave.next","this.dragover.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.drop.next","this.dropdata","this.element.nativeel","this.element.nativeelement.getboundingclientrect","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.eventlistenersubscriptions[typ","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointermove.next(pointerdownev","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(move_cursor","this.setcursor(nul","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","through","todo","tort","touch","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","true","type","typealias","undefin","unsubscribeeventlisten","until","upgrad","us","usag","user","valid","validatedrag","valu","variabl","version","via","view","void","warranti","way","webkit","whether","without","work","wors","x","y","yourself","y}px","zone"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular 4.0+ drag and drop\n\n\n\n\n\n\n\nDemo\nhttps://mattlewis92.github.io/angular-draggable-droppable/demo/\nTable of contents\n\nAbout\nInstallation\nDocumentation\nDevelopment\nLicense\n\nAbout\nObservable powered drag and drop for angular 4.0+\nInstallation\nInstall through npm:\nnpm install --save angular-draggable-droppableThen use it in your app like so:\nimport {Component, NgModule} from '@angular/core';\nimport {DragAndDropModule} from 'angular-draggable-droppable';\n\n@NgModule({\n  declarations: [DemoApp],\n  imports: [DragAndDropModule.forRoot()],\n  bootstrap: [DemoApp]\n})\nclass DemoModule {}\n\n@Component({\n  selector: 'demo-app',\n  template: `\n    Drag me!\n    \n      Drop here\n      Item dropped here with data: \"{{ droppedData }}\"!\n    \n  `\n})\nclass DemoApp {\n\n  droppedData: string;\n\n  dragEnd(event) {\n    console.log('Element was dragged', event);\n  }\n\n}You may also find it useful to view the demo source.\nUsage without a module bundler\n\n\n    // everything is exported angularDraggableDroppable namespace\nDocumentation\nAll documentation is auto-generated from the source and can be viewed here:\nhttps://mattlewis92.github.io/angular-draggable-droppable/docs/\nDevelopment\nPrepare your environment\n\nInstall Node.js and NPM (should come with)\nInstall local dev dependencies: npm install while current directory is this repo\n\nDevelopment server\nRun npm start to start a development server on port 8000 with auto reload + tests.\nTesting\nRun npm test to run tests once or npm run test:watch to continually run tests.\nRelease\nnpm run releaseLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n\n    \n            \n                \n                    \n                        \n                        2 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n1.0.2 (2017-09-18)\nBug Fixes\n\ndraggable: fire dragEnd event when the event was not dragged (73d65d7), closes #17\n\n\n1.0.1 (2017-04-14)\nBug Fixes\n\ndraggable: prevent text from being highlighted in firefox (7d859c1)\n\n\n1.0.0 (2017-03-24)\nFeatures\n\nng4: upgrade to angular 4 (42631bc)\n\nBREAKING CHANGES\n\nng4: angular 4.0 or higher is now required to use this library. The upgrade should be seamless for most users\n\n\n0.6.0 (2017-03-23)\nFeatures\n\ndraggable: make dragging work on touch devices (dc0f863)\n\n\n0.5.4 (2017-03-04)\nPerformance Improvements\n\ndraggable: lazily create all mouse event listeners (3c99d40)\n\n\n0.5.3 (2017-03-04)\nBug Fixes\n\nmove dependencies to dev (17a2ccc)\n\n\n0.5.2 (2017-03-04)\nBug Fixes\n\nloosen peer dependency to allow angular 4 (bcc9080)\n\nPerformance Improvements\n\ndraggable: lazily create the mouse move listener (bebd925)\nrun all event listeners outside of angulars zone (d7c9256)\n\n\n0.5.1 (2017-01-06)\nBug Fixes\n\ndraggable: allow draggable events to be clicked (44ea67e)\n\n\n0.5.0 (2016-12-21)\nFeatures\n\ndragAndDropModule: add forRoot method (00f6989)\n\nBREAKING CHANGES\n\ndragAndDropModule: You must now import the DragAndDropModule with the forRoot method\n\n\n0.4.0 (2016-12-18)\nFeatures\n\ndraggable: remove the dragContainer option (5aca67d)\n\nBREAKING CHANGES\n\ndraggable: the dragContainer option has been removed as it didn't work in all cases and can be\n\nimplemented yourself with the validateDrag option\n\n0.3.1 (2016-12-18)\nBug Fixes\n\ndraggable: make the dragEnd output respect the validateDrag input (26cfa7e)\n\n\n0.3.0 (2016-12-12)\nFeatures\n\ndraggable: add dragContainer option (fb75711), closes #10\n\n\n0.2.3 (2016-12-11)\nBug Fixes\n\ndraggable: allow events to be dragged back into their original positions (7831903)\n\n\n0.2.2 (2016-12-11)\nBug Fixes\n\ndraggable: only emit the dragEnd event once (52e9a22)\n\n\n0.2.1 (2016-12-10)\nBug Fixes\n\nrevert duplicate dragging fix as it caused worse errors (7476301)\n\n\n0.2.0 (2016-12-10)\nBug Fixes\n\ncompletely remove applied styled after dragging (3445337)\ndraggable: dont fire duplicate dragging events with the same coordinates (222914b), closes #6\ndraggable: when dragging is disabled, no drag events should be emitted (729f24e)\ndroppable: only allow dropping of events when the cursor is inside (652d632), closes #5\n\nFeatures\n\ndraggable: auto change the cursor to the move icon on hover (50d1962), closes #9\nsnapGrid: rename to dragSnapGrid (a77d07a), closes #7\nvalidateDrag: add the validate drag input (9e5ac95), closes #8\n\nBREAKING CHANGES\n\ndroppable: the drag enter, leave and drop events will not fire until cursor is inside the droppable element. This is to mimic how native drag and drop works\nsnapGrid: The snapGrid input has been renamed to dragSnapGrid\n\n\n0.1.1 (2016-12-09)\nBug Fixes\n\ndraggable: disable pointer events on the element when dragging (f29b424)\n\n\n0.1.0 (2016-11-27)\nBug Fixes\n\ndraggable: dispose of observables when the component is destroyed (710c7f7)\nprevent the default move move interaction on dragging (d2fdcde)\n\nFeatures\n\ndragAxix: allow the drag axis to be locked to just x and y (38fd4b5), closes #2\ndraggable: add mwlDraggable directive (c6771eb)\ndroppable: add the mwlDroppable directive (6016f12), closes #1\nghostDragEnabled: add option to disable the ghost dragging effect (709327c), closes #3\nsnapGrid: implement draggable snap grids (16a3df8), closes #4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2016 Matt Lewis\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/draggable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnChanges\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [mwlDraggable]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         ngOnChanges\n                                    \n                                    \n                                         ngOnDestroy\n                                    \n                                    \n                                         ngOnInit\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dragAxis\n                                    \n                                    \n                                        dragSnapGrid\n                                    \n                                    \n                                        dropData\n                                    \n                                    \n                                        ghostDragEnabled\n                                    \n                                    \n                                        validateDrag\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dragEnd\n                                    \n                                    \n                                        dragging\n                                    \n                                    \n                                        dragStart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    dragAxis\n                                \n                                \n                                      \n                                        Type:    DragAxis\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:57\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragSnapGrid\n                                \n                                \n                                      \n                                        Type:    SnapGrid\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:59\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dropData\n                                \n                                \n                                      \n                                        Type:    any\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:55\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    ghostDragEnabled\n                                \n                                \n                                      \n                                        Type:    boolean\n\n                                      \n                                    \n                                      Default value: true\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:61\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    validateDrag\n                                \n                                \n                                      \n                                        Type:    ValidateDrag\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:63\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    dragEnd\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:72\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragging\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:69\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragStart\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:66\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ngOnChanges\n                                \n                            \n                            \n                                \n            ngOnChanges(changes: SimpleChanges)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:224\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              changes\n                                                              \n                                                                      SimpleChanges\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ngOnDestroy\n                                \n                            \n                            \n                                \n            ngOnDestroy()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:230\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ngOnInit\n                                \n                            \n                            \n                                \n            ngOnInit()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:111\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/takeLast';\nimport 'rxjs/add/operator/pairwise';\nimport 'rxjs/add/operator/share';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() dropData: any;\n\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  @Input() ghostDragEnabled: boolean = true;\n\n  @Input() validateDrag: ValidateDrag;\n\n  @Output()\n  dragStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  dragging: EventEmitter = new EventEmitter();\n\n  @Output()\n  dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable = this.pointerDown\n      .filter(() => this.canDrag())\n      .flatMap((pointerDownEvent: PointerEvent) => {\n        pointerDownEvent.event.preventDefault();\n\n        this.zone.run(() => {\n          this.dragStart.next({ x: 0, y: 0 });\n        });\n\n        this.setCursor(MOVE_CURSOR);\n\n        const currentDrag: Subject = new Subject();\n\n        this.draggableHelper.currentDrag.next(currentDrag);\n\n        const pointerMove: Observable = this.pointerMove\n          .map((pointerMoveEvent: PointerEvent) => {\n            pointerMoveEvent.event.preventDefault();\n\n            return {\n              currentDrag,\n              x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n              y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n              clientX: pointerMoveEvent.clientX,\n              clientY: pointerMoveEvent.clientY\n            };\n          })\n          .map((moveData: Coordinates) => {\n            if (this.dragSnapGrid.x) {\n              moveData.x =\n                Math.floor(moveData.x / this.dragSnapGrid.x) *\n                this.dragSnapGrid.x;\n            }\n\n            if (this.dragSnapGrid.y) {\n              moveData.y =\n                Math.floor(moveData.y / this.dragSnapGrid.y) *\n                this.dragSnapGrid.y;\n            }\n\n            return moveData;\n          })\n          .map((moveData: Coordinates) => {\n            if (!this.dragAxis.x) {\n              moveData.x = 0;\n            }\n\n            if (!this.dragAxis.y) {\n              moveData.y = 0;\n            }\n\n            return moveData;\n          })\n          .filter(\n            ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n          )\n          .takeUntil(Observable.merge(this.pointerUp, this.pointerDown));\n\n        pointerMove.takeLast(1).subscribe(({ x, y }) => {\n          this.zone.run(() => {\n            this.dragEnd.next({ x, y });\n          });\n          currentDrag.complete();\n          this.setCssTransform(null);\n          if (this.ghostDragEnabled) {\n            this.renderer.setStyle(\n              this.element.nativeElement,\n              'pointerEvents',\n              null\n            );\n          }\n        });\n\n        this.pointerMove.next(pointerDownEvent);\n\n        return pointerMove;\n      })\n      .share();\n\n    Observable.merge(\n      pointerDrag.take(1).map(value => [, value]),\n      pointerDrag.pairwise()\n    )\n      .filter(([previous, next]) => {\n        if (!previous) {\n          return true;\n        }\n        return previous.x !== next.x || previous.y !== next.y;\n      })\n      .map(([previous, next]) => next)\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(MOVE_CURSOR);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor(null);\n  }\n\n  private setCssTransform(value: string): void {\n    if (this.ghostDragEnabled) {\n      this.renderer.setStyle(this.element.nativeElement, 'transform', value);\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-webkit-transform',\n        value\n      );\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-ms-transform',\n        value\n      );\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-moz-transform',\n        value\n      );\n      this.renderer.setStyle(this.element.nativeElement, '-o-transform', value);\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach((type: string) => {\n      this.eventListenerSubscriptions[type]();\n      delete this.eventListenerSubscriptions[type];\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DroppableDirective.html":{"url":"directives/DroppableDirective.html","title":"directive - DroppableDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DroppableDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/droppable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [mwlDroppable]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         currentDragSubscription\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         ngOnDestroy\n                                    \n                                    \n                                         ngOnInit\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dragEnter\n                                    \n                                    \n                                        dragLeave\n                                    \n                                    \n                                        dragOver\n                                    \n                                    \n                                        drop\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(element: ElementRef, draggableHelper: DraggableHelper, zone: NgZone)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:47\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              element\n                                                              \n                                                                        ElementRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              draggableHelper\n                                                              \n                                                                        DraggableHelper\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              zone\n                                                              \n                                                                        NgZone\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    dragEnter\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:39\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragLeave\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:41\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragOver\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:43\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    drop\n                                \n                                \n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:45\n                                        \n                                    \n                        \n                    \n            \n\n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ngOnDestroy\n                                \n                            \n                            \n                                \n            ngOnDestroy()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:128\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     ngOnInit\n                                \n                            \n                            \n                                \n            ngOnInit()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:55\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     currentDragSubscription\n                                \n                            \n                            \n                                \n                                    currentDragSubscription:     Subscription\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subscription\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:47\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  NgZone\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/pairwise';\nimport 'rxjs/add/operator/filter';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nfunction isCoordinateWithinRectangle(\n  clientX: number,\n  clientY: number,\n  rect: ClientRect\n): boolean {\n  return (\n    clientX >= rect.left &&\n    clientX = rect.top &&\n    clientY  = new EventEmitter();\n\n  @Output() dragLeave: EventEmitter = new EventEmitter();\n\n  @Output() dragOver: EventEmitter = new EventEmitter();\n\n  @Output() drop: EventEmitter = new EventEmitter();\n\n  currentDragSubscription: Subscription;\n\n  constructor(\n    private element: ElementRef,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    interface CurrentDragData {\n      clientX: number;\n      clientY: number;\n      dropData: any;\n    }\n\n    this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(\n      (drag: Subject) => {\n        const droppableRectangle: ClientRect = this.element.nativeElement.getBoundingClientRect();\n\n        let currentDragDropData: any;\n        const overlaps: Observable = drag.map(({ clientX, clientY, dropData }) => {\n          currentDragDropData = dropData;\n          return isCoordinateWithinRectangle(\n            clientX,\n            clientY,\n            droppableRectangle\n          );\n        });\n\n        const overlapsChanged: Observable = overlaps.distinctUntilChanged();\n\n        let dragOverActive: boolean; // TODO - see if there's a way of doing this via rxjs\n\n        overlapsChanged.filter(overlapsNow => overlapsNow).subscribe(() => {\n          dragOverActive = true;\n          this.zone.run(() => {\n            this.dragEnter.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n\n        overlaps.filter(overlapsNow => overlapsNow).subscribe(() => {\n          this.zone.run(() => {\n            this.dragOver.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n\n        overlapsChanged\n          .pairwise()\n          .filter(([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)\n          .subscribe(() => {\n            dragOverActive = false;\n            this.zone.run(() => {\n              this.dragLeave.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        drag.flatMap(() => overlaps).subscribe({\n          complete: () => {\n            if (dragOverActive) {\n              this.zone.run(() => {\n                this.drop.next({\n                  dropData: currentDragDropData\n                });\n              });\n            }\n          }\n        });\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.currentDragSubscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Coordinates.html":{"url":"interfaces/Coordinates.html","title":"interface - Coordinates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Coordinates\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/draggable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:27\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:28\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/takeLast';\nimport 'rxjs/add/operator/pairwise';\nimport 'rxjs/add/operator/share';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() dropData: any;\n\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  @Input() ghostDragEnabled: boolean = true;\n\n  @Input() validateDrag: ValidateDrag;\n\n  @Output()\n  dragStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  dragging: EventEmitter = new EventEmitter();\n\n  @Output()\n  dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable = this.pointerDown\n      .filter(() => this.canDrag())\n      .flatMap((pointerDownEvent: PointerEvent) => {\n        pointerDownEvent.event.preventDefault();\n\n        this.zone.run(() => {\n          this.dragStart.next({ x: 0, y: 0 });\n        });\n\n        this.setCursor(MOVE_CURSOR);\n\n        const currentDrag: Subject = new Subject();\n\n        this.draggableHelper.currentDrag.next(currentDrag);\n\n        const pointerMove: Observable = this.pointerMove\n          .map((pointerMoveEvent: PointerEvent) => {\n            pointerMoveEvent.event.preventDefault();\n\n            return {\n              currentDrag,\n              x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n              y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n              clientX: pointerMoveEvent.clientX,\n              clientY: pointerMoveEvent.clientY\n            };\n          })\n          .map((moveData: Coordinates) => {\n            if (this.dragSnapGrid.x) {\n              moveData.x =\n                Math.floor(moveData.x / this.dragSnapGrid.x) *\n                this.dragSnapGrid.x;\n            }\n\n            if (this.dragSnapGrid.y) {\n              moveData.y =\n                Math.floor(moveData.y / this.dragSnapGrid.y) *\n                this.dragSnapGrid.y;\n            }\n\n            return moveData;\n          })\n          .map((moveData: Coordinates) => {\n            if (!this.dragAxis.x) {\n              moveData.x = 0;\n            }\n\n            if (!this.dragAxis.y) {\n              moveData.y = 0;\n            }\n\n            return moveData;\n          })\n          .filter(\n            ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n          )\n          .takeUntil(Observable.merge(this.pointerUp, this.pointerDown));\n\n        pointerMove.takeLast(1).subscribe(({ x, y }) => {\n          this.zone.run(() => {\n            this.dragEnd.next({ x, y });\n          });\n          currentDrag.complete();\n          this.setCssTransform(null);\n          if (this.ghostDragEnabled) {\n            this.renderer.setStyle(\n              this.element.nativeElement,\n              'pointerEvents',\n              null\n            );\n          }\n        });\n\n        this.pointerMove.next(pointerDownEvent);\n\n        return pointerMove;\n      })\n      .share();\n\n    Observable.merge(\n      pointerDrag.take(1).map(value => [, value]),\n      pointerDrag.pairwise()\n    )\n      .filter(([previous, next]) => {\n        if (!previous) {\n          return true;\n        }\n        return previous.x !== next.x || previous.y !== next.y;\n      })\n      .map(([previous, next]) => next)\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(MOVE_CURSOR);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor(null);\n  }\n\n  private setCssTransform(value: string): void {\n    if (this.ghostDragEnabled) {\n      this.renderer.setStyle(this.element.nativeElement, 'transform', value);\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-webkit-transform',\n        value\n      );\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-ms-transform',\n        value\n      );\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-moz-transform',\n        value\n      );\n      this.renderer.setStyle(this.element.nativeElement, '-o-transform', value);\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach((type: string) => {\n      this.eventListenerSubscriptions[type]();\n      delete this.eventListenerSubscriptions[type];\n    });\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragAxis.html":{"url":"interfaces/DragAxis.html","title":"interface - DragAxis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragAxis\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/draggable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:32\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:33\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/takeLast';\nimport 'rxjs/add/operator/pairwise';\nimport 'rxjs/add/operator/share';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() dropData: any;\n\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  @Input() ghostDragEnabled: boolean = true;\n\n  @Input() validateDrag: ValidateDrag;\n\n  @Output()\n  dragStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  dragging: EventEmitter = new EventEmitter();\n\n  @Output()\n  dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable = this.pointerDown\n      .filter(() => this.canDrag())\n      .flatMap((pointerDownEvent: PointerEvent) => {\n        pointerDownEvent.event.preventDefault();\n\n        this.zone.run(() => {\n          this.dragStart.next({ x: 0, y: 0 });\n        });\n\n        this.setCursor(MOVE_CURSOR);\n\n        const currentDrag: Subject = new Subject();\n\n        this.draggableHelper.currentDrag.next(currentDrag);\n\n        const pointerMove: Observable = this.pointerMove\n          .map((pointerMoveEvent: PointerEvent) => {\n            pointerMoveEvent.event.preventDefault();\n\n            return {\n              currentDrag,\n              x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n              y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n              clientX: pointerMoveEvent.clientX,\n              clientY: pointerMoveEvent.clientY\n            };\n          })\n          .map((moveData: Coordinates) => {\n            if (this.dragSnapGrid.x) {\n              moveData.x =\n                Math.floor(moveData.x / this.dragSnapGrid.x) *\n                this.dragSnapGrid.x;\n            }\n\n            if (this.dragSnapGrid.y) {\n              moveData.y =\n                Math.floor(moveData.y / this.dragSnapGrid.y) *\n                this.dragSnapGrid.y;\n            }\n\n            return moveData;\n          })\n          .map((moveData: Coordinates) => {\n            if (!this.dragAxis.x) {\n              moveData.x = 0;\n            }\n\n            if (!this.dragAxis.y) {\n              moveData.y = 0;\n            }\n\n            return moveData;\n          })\n          .filter(\n            ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n          )\n          .takeUntil(Observable.merge(this.pointerUp, this.pointerDown));\n\n        pointerMove.takeLast(1).subscribe(({ x, y }) => {\n          this.zone.run(() => {\n            this.dragEnd.next({ x, y });\n          });\n          currentDrag.complete();\n          this.setCssTransform(null);\n          if (this.ghostDragEnabled) {\n            this.renderer.setStyle(\n              this.element.nativeElement,\n              'pointerEvents',\n              null\n            );\n          }\n        });\n\n        this.pointerMove.next(pointerDownEvent);\n\n        return pointerMove;\n      })\n      .share();\n\n    Observable.merge(\n      pointerDrag.take(1).map(value => [, value]),\n      pointerDrag.pairwise()\n    )\n      .filter(([previous, next]) => {\n        if (!previous) {\n          return true;\n        }\n        return previous.x !== next.x || previous.y !== next.y;\n      })\n      .map(([previous, next]) => next)\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(MOVE_CURSOR);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor(null);\n  }\n\n  private setCssTransform(value: string): void {\n    if (this.ghostDragEnabled) {\n      this.renderer.setStyle(this.element.nativeElement, 'transform', value);\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-webkit-transform',\n        value\n      );\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-ms-transform',\n        value\n      );\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-moz-transform',\n        value\n      );\n      this.renderer.setStyle(this.element.nativeElement, '-o-transform', value);\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach((type: string) => {\n      this.eventListenerSubscriptions[type]();\n      delete this.eventListenerSubscriptions[type];\n    });\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropData.html":{"url":"interfaces/DropData.html","title":"interface - DropData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropData\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/droppable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dropData\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dropData\n                                    \n                                \n                                \n                                    \n                                        dropData:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:32\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  NgZone\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/pairwise';\nimport 'rxjs/add/operator/filter';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nfunction isCoordinateWithinRectangle(\n  clientX: number,\n  clientY: number,\n  rect: ClientRect\n): boolean {\n  return (\n    clientX >= rect.left &&\n    clientX = rect.top &&\n    clientY  = new EventEmitter();\n\n  @Output() dragLeave: EventEmitter = new EventEmitter();\n\n  @Output() dragOver: EventEmitter = new EventEmitter();\n\n  @Output() drop: EventEmitter = new EventEmitter();\n\n  currentDragSubscription: Subscription;\n\n  constructor(\n    private element: ElementRef,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    interface CurrentDragData {\n      clientX: number;\n      clientY: number;\n      dropData: any;\n    }\n\n    this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(\n      (drag: Subject) => {\n        const droppableRectangle: ClientRect = this.element.nativeElement.getBoundingClientRect();\n\n        let currentDragDropData: any;\n        const overlaps: Observable = drag.map(({ clientX, clientY, dropData }) => {\n          currentDragDropData = dropData;\n          return isCoordinateWithinRectangle(\n            clientX,\n            clientY,\n            droppableRectangle\n          );\n        });\n\n        const overlapsChanged: Observable = overlaps.distinctUntilChanged();\n\n        let dragOverActive: boolean; // TODO - see if there's a way of doing this via rxjs\n\n        overlapsChanged.filter(overlapsNow => overlapsNow).subscribe(() => {\n          dragOverActive = true;\n          this.zone.run(() => {\n            this.dragEnter.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n\n        overlaps.filter(overlapsNow => overlapsNow).subscribe(() => {\n          this.zone.run(() => {\n            this.dragOver.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n\n        overlapsChanged\n          .pairwise()\n          .filter(([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)\n          .subscribe(() => {\n            dragOverActive = false;\n            this.zone.run(() => {\n              this.dragLeave.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        drag.flatMap(() => overlaps).subscribe({\n          complete: () => {\n            if (dragOverActive) {\n              this.zone.run(() => {\n                this.drop.next({\n                  dropData: currentDragDropData\n                });\n              });\n            }\n          }\n        });\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.currentDragSubscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PointerEvent.html":{"url":"interfaces/PointerEvent.html","title":"interface - PointerEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PointerEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/draggable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientX\n                                \n                                \n                                        clientY\n                                \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientX\n                                    \n                                \n                                \n                                    \n                                        clientX:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:44\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientY\n                                    \n                                \n                                \n                                    \n                                        clientY:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:45\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     MouseEvent | TouchEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent | TouchEvent\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:46\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/takeLast';\nimport 'rxjs/add/operator/pairwise';\nimport 'rxjs/add/operator/share';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() dropData: any;\n\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  @Input() ghostDragEnabled: boolean = true;\n\n  @Input() validateDrag: ValidateDrag;\n\n  @Output()\n  dragStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  dragging: EventEmitter = new EventEmitter();\n\n  @Output()\n  dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable = this.pointerDown\n      .filter(() => this.canDrag())\n      .flatMap((pointerDownEvent: PointerEvent) => {\n        pointerDownEvent.event.preventDefault();\n\n        this.zone.run(() => {\n          this.dragStart.next({ x: 0, y: 0 });\n        });\n\n        this.setCursor(MOVE_CURSOR);\n\n        const currentDrag: Subject = new Subject();\n\n        this.draggableHelper.currentDrag.next(currentDrag);\n\n        const pointerMove: Observable = this.pointerMove\n          .map((pointerMoveEvent: PointerEvent) => {\n            pointerMoveEvent.event.preventDefault();\n\n            return {\n              currentDrag,\n              x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n              y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n              clientX: pointerMoveEvent.clientX,\n              clientY: pointerMoveEvent.clientY\n            };\n          })\n          .map((moveData: Coordinates) => {\n            if (this.dragSnapGrid.x) {\n              moveData.x =\n                Math.floor(moveData.x / this.dragSnapGrid.x) *\n                this.dragSnapGrid.x;\n            }\n\n            if (this.dragSnapGrid.y) {\n              moveData.y =\n                Math.floor(moveData.y / this.dragSnapGrid.y) *\n                this.dragSnapGrid.y;\n            }\n\n            return moveData;\n          })\n          .map((moveData: Coordinates) => {\n            if (!this.dragAxis.x) {\n              moveData.x = 0;\n            }\n\n            if (!this.dragAxis.y) {\n              moveData.y = 0;\n            }\n\n            return moveData;\n          })\n          .filter(\n            ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n          )\n          .takeUntil(Observable.merge(this.pointerUp, this.pointerDown));\n\n        pointerMove.takeLast(1).subscribe(({ x, y }) => {\n          this.zone.run(() => {\n            this.dragEnd.next({ x, y });\n          });\n          currentDrag.complete();\n          this.setCssTransform(null);\n          if (this.ghostDragEnabled) {\n            this.renderer.setStyle(\n              this.element.nativeElement,\n              'pointerEvents',\n              null\n            );\n          }\n        });\n\n        this.pointerMove.next(pointerDownEvent);\n\n        return pointerMove;\n      })\n      .share();\n\n    Observable.merge(\n      pointerDrag.take(1).map(value => [, value]),\n      pointerDrag.pairwise()\n    )\n      .filter(([previous, next]) => {\n        if (!previous) {\n          return true;\n        }\n        return previous.x !== next.x || previous.y !== next.y;\n      })\n      .map(([previous, next]) => next)\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(MOVE_CURSOR);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor(null);\n  }\n\n  private setCssTransform(value: string): void {\n    if (this.ghostDragEnabled) {\n      this.renderer.setStyle(this.element.nativeElement, 'transform', value);\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-webkit-transform',\n        value\n      );\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-ms-transform',\n        value\n      );\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-moz-transform',\n        value\n      );\n      this.renderer.setStyle(this.element.nativeElement, '-o-transform', value);\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach((type: string) => {\n      this.eventListenerSubscriptions[type]();\n      delete this.eventListenerSubscriptions[type];\n    });\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnapGrid.html":{"url":"interfaces/SnapGrid.html","title":"interface - SnapGrid","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SnapGrid\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/draggable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:37\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:38\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/takeUntil';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/takeLast';\nimport 'rxjs/add/operator/pairwise';\nimport 'rxjs/add/operator/share';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() dropData: any;\n\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  @Input() ghostDragEnabled: boolean = true;\n\n  @Input() validateDrag: ValidateDrag;\n\n  @Output()\n  dragStart: EventEmitter = new EventEmitter();\n\n  @Output()\n  dragging: EventEmitter = new EventEmitter();\n\n  @Output()\n  dragEnd: EventEmitter = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable = this.pointerDown\n      .filter(() => this.canDrag())\n      .flatMap((pointerDownEvent: PointerEvent) => {\n        pointerDownEvent.event.preventDefault();\n\n        this.zone.run(() => {\n          this.dragStart.next({ x: 0, y: 0 });\n        });\n\n        this.setCursor(MOVE_CURSOR);\n\n        const currentDrag: Subject = new Subject();\n\n        this.draggableHelper.currentDrag.next(currentDrag);\n\n        const pointerMove: Observable = this.pointerMove\n          .map((pointerMoveEvent: PointerEvent) => {\n            pointerMoveEvent.event.preventDefault();\n\n            return {\n              currentDrag,\n              x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n              y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n              clientX: pointerMoveEvent.clientX,\n              clientY: pointerMoveEvent.clientY\n            };\n          })\n          .map((moveData: Coordinates) => {\n            if (this.dragSnapGrid.x) {\n              moveData.x =\n                Math.floor(moveData.x / this.dragSnapGrid.x) *\n                this.dragSnapGrid.x;\n            }\n\n            if (this.dragSnapGrid.y) {\n              moveData.y =\n                Math.floor(moveData.y / this.dragSnapGrid.y) *\n                this.dragSnapGrid.y;\n            }\n\n            return moveData;\n          })\n          .map((moveData: Coordinates) => {\n            if (!this.dragAxis.x) {\n              moveData.x = 0;\n            }\n\n            if (!this.dragAxis.y) {\n              moveData.y = 0;\n            }\n\n            return moveData;\n          })\n          .filter(\n            ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n          )\n          .takeUntil(Observable.merge(this.pointerUp, this.pointerDown));\n\n        pointerMove.takeLast(1).subscribe(({ x, y }) => {\n          this.zone.run(() => {\n            this.dragEnd.next({ x, y });\n          });\n          currentDrag.complete();\n          this.setCssTransform(null);\n          if (this.ghostDragEnabled) {\n            this.renderer.setStyle(\n              this.element.nativeElement,\n              'pointerEvents',\n              null\n            );\n          }\n        });\n\n        this.pointerMove.next(pointerDownEvent);\n\n        return pointerMove;\n      })\n      .share();\n\n    Observable.merge(\n      pointerDrag.take(1).map(value => [, value]),\n      pointerDrag.pairwise()\n    )\n      .filter(([previous, next]) => {\n        if (!previous) {\n          return true;\n        }\n        return previous.x !== next.x || previous.y !== next.y;\n      })\n      .map(([previous, next]) => next)\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(MOVE_CURSOR);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor(null);\n  }\n\n  private setCssTransform(value: string): void {\n    if (this.ghostDragEnabled) {\n      this.renderer.setStyle(this.element.nativeElement, 'transform', value);\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-webkit-transform',\n        value\n      );\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-ms-transform',\n        value\n      );\n      this.renderer.setStyle(\n        this.element.nativeElement,\n        '-moz-transform',\n        value\n      );\n      this.renderer.setStyle(this.element.nativeElement, '-o-transform', value);\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach((type: string) => {\n      this.eventListenerSubscriptions[type]();\n      delete this.eventListenerSubscriptions[type];\n    });\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isCoordinateWithinRectangle\n                        \n                    \n                \n            \n        \n    \n\n\n    src/droppable.directive.ts\n    \n                \n                \n                    \n                        \n                            \n                             isCoordinateWithinRectangle\n                        \n                    \n                    \n                        \n    isCoordinateWithinRectangle(clientX: undefined, clientY: undefined, rect: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MOVE_CURSOR\n                        \n                    \n                \n            \n        \n    \n\n\n    src/draggable.directive.ts\n    \n                \n                \n                    \n                        \n                            \n                             MOVE_CURSOR\n                        \n                    \n                    \n                        \n                            MOVE_CURSOR:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : move\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ValidateDrag\n                        \n                    \n                \n            \n        \n    \n\n\n    src/draggable.directive.ts\n    \n            \n                \n                    \n                        \n                            \n                            ValidateDrag\n                        \n                    \n                    \n                        \n                            ValidateDrag()\n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
