var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["5.0","8000","angular","angular/cor","app","auto","bootstrap","class","come","compon","console.log('el","content","continu","current","data","declar","demo","demoapp","demomodul","depend","dev","develop","directori","document","drag","draganddropmodul","draganddropmodule.forroot","dragend(ev","draggabl","drop","droppabl","droppable/demo","droppable/doc","droppablethen","droppeddata","environ","event","find","gener","get","here","https://mattlewis92.github.io/angular","import","index","instal","item","licens","local","match","mit","ngmodul","node.j","npm","observ","onc","port","power","prepar","releas","releaselicens","reload","repo","result","run","save","selector","server","sourc","start","string","tabl","templat","test","test:watch","through","us","view"],"overview.html":["1","2","5","direct","interfac","match","modul","overview","result"],"changelog.html":["0.1.0","0.1.1","0.2.0","0.2.1","0.2.2","0.2.3","0.3.0","0.3.1","0.4.0","0.5.0","0.5.1","0.5.2","0.5.3","0.5.4","0.6.0","00f6989","01","03","04","06","09","1","1.0.0","1.0.1","1.0.2","1.1.0","1.1.1","10","11","12","1265bee","14","16a3df8","17","17a2ccc","18","2","2.0.0","20","2016","2017","21","22","222914b","23","24","26","26cfa7e","27","3","3445337","38fd4b5","3c99d40","4","4.0","4159ce2","42631bc","44ea67","45c6b5f","4a58c61","5","5.5.x","50d1962","52e9a22","57dd436","5aca67d","6","6016f12","652d632","7","709327c","710c7f7","729f24e","73d65d7","7476301","7831903","7d859c1","8","897b3fe","9","9e5ac95","9fca12a","a77d07a","actual","ad","add","allow","angular","appli","auto","axi","back","bcc9080","be","bebd925","behaviour","break","bug","build","c6771eb","call","case","caus","chang","changelog","click","close","commit","complet","compon","config","coordin","creat","cursor","customis","d2fdcde","d7c9256","dc0f863","default","depend","destroy","dev","devic","didn't","direct","disabl","dispos","document","dont","drag","draganddropmodul","dragaxix","dragcontain","dragend","draggabl","dragpointerdown","dragsnapgrid","dragstart","drop","droppabl","droppable.j","droppable.umd.j","droppable/bundles/angular","droppable/dist/umd/angular","duplic","effect","element","emit","end","enter","error","event","f29b424","fb75711","featur","file","fire","firefox","fix","forroot","get","ghost","ghostdragen","grid","guidelin","higher","highlight","hover","icon","implement","import","improv","input","insid","interact","lazili","leav","lettabl","librari","listen","lock","log","longer","loosen","make","match","method","mimic","modul","mous","mousedown","mouseup","move","mwldraggabl","mwldroppabl","nativ","need","new","ng","ng4","notabl","now","observ","old","onc","oper","option","origin","output","outsid","packag","packagr","path","peer","perform","pointer","posit","prevent","project","prototyp","regular","remov","renam","repliat","requir","respect","result","revert","run","rxj","same","seamless","see","snap","snapgrid","standard","start","style","system.j","text","touch","umd","until","updat","upgrad","us","user","valid","validatedrag","version","work","wors","x","y","yourself","zone"],"license.html":["2016","abov","action","and/or","aris","associ","author","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","distribut","document","event","express","file","fit","follow","free","furnish","get","grant","herebi","holder","impli","includ","kind","lewi","liabil","liabl","licens","limit","match","matt","merchant","merg","mit","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","sell","shall","softwar","start","subject","sublicens","substanti","tort","us","warranti","whether","without"],"modules.html":["brows","draganddropmodul","match","modul","result"],"modules/DragAndDropModule.html":["angular/cor","class","declar","draganddropmodul","draggabl","draggable.direct","draggabledirect","draggablehelp","drop.module.t","droppable.direct","droppabledirect","export","file","forroot","helper.provid","import","info","match","modul","modulewithprovid","ngmodul","provid","result","return","sourc","src/drag","static"],"directives/DraggableDirective.html":["0","allow","along","angular/cor","any).eventlistenersubscriptions[typ","axi","be","behaviour","boolean","call","candrag","changes['dragaxi","checkeventlisten","class","clienti","clientx","const","constructor","control","coordin","currentdrag","currentdrag.complet","currentdrag.next","cursor","custom","data","default","defin","delet","devic","direct","document","drag","dragaxi","dragcursor","dragend","draggabl","draggabledirect","draggablehelp","dragpointerdown","dragsnapgrid","dragstart","drop","dropdata","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","file","filter","filter(([previ","ghost","ghostdragen","grid","haseventlisten","helper.provid","hidden","implement","import","index","info","input","interfac","map","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","merg","mergemap","mergemap((pointerdownev","metadata","mous","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","new","next","next.i","next.x","ngonchanges(chang","ngondestroy","ngoninit","ngzone","none","null","number","o","object","object.keys(this.eventlistenersubscriptions).foreach(typ","object.keys(this.eventlistenersubscriptions).length","observ","on","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","output","pairwis","pass","pipe","pipe(filt","pipe(map(([previ","pipe(shar","pipe(takeuntil(merge(this.pointerup","pointer","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pipe(pairwis","pointerdrag.pipe(take(1)).pipe(map(valu","pointerev","pointermov","pointermove.pipe(take(1)).subscrib","pointermove.pipe(takelast(1)).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","press","previou","previous.i","previous.x","privat","public","render","renderer2","result","return","rxjs/observ","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takelast","rxjs/operators/takeuntil","rxjs/subject","selector","setcsstransform(valu","setcursor(valu","share","show","simplechang","snap","snapgrid","sourc","src/draggable.directive.t","src/draggable.directive.ts:100","src/draggable.directive.ts:105","src/draggable.directive.ts:59","src/draggable.directive.ts:64","src/draggable.directive.ts:69","src/draggable.directive.ts:74","src/draggable.directive.ts:79","src/draggable.directive.ts:84","src/draggable.directive.ts:89","src/draggable.directive.ts:95","start","string","subject","subscrib","take","takelast","takeuntil","this.candrag","this.checkeventlisten","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.draggablehelper.currentdrag.next(currentdrag","this.dragging.next","this.dragpointerdown.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.dropdata","this.element.nativeel","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(nul","this.setcursor(this.dragcursor","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","touch","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","transformattribut","transformattributes.foreach(transformattribut","true","type","unsubscribeeventlisten","us","validatedrag","valu","void","webkit","x","y","y}px","zone"],"directives/DroppableDirective.html":["angular/cor","boolean","call","clienti","clientrect","clientx","complet","const","constructor","constructor(el","currentdragdata","currentdragdropdata","currentdragsubscript","defin","descript","didoverlap","direct","distinctuntilchang","do","drag","drag.pip","drag.pipe(mergemap","dragent","draggabl","draggablehelp","dragleav","dragov","dragoveract","drop","dropdata","droppabledirect","droppablerectangl","element","elementref","event","eventemitt","fals","file","filter","filter(([didoverlap","function","helper.provid","implement","import","index","info","interfac","iscoordinatewithinrectangl","map","match","mergemap","metadata","move","mwldroppabl","name","new","ngondestroy","ngoninit","ngzone","number","observ","ondestroy","oninit","option","output","over","overlap","overlaps)).subscrib","overlaps.pipe(distinctuntilchang","overlaps.pipe(filter(overlapsnow","overlapschang","overlapsnow","overlapsnow)).subscrib","pairwis","paramet","pipe","pipe(filter(overlapsnow","pipe(pairwis","privat","properti","rect","rect.left","rect.top","result","return","rxj","rxjs/observ","rxjs/operators/distinctuntilchang","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/subject","rxjs/subscript","see","selector","sourc","src/droppable.directive.t","src/droppable.directive.ts:44","src/droppable.directive.ts:49","src/droppable.directive.ts:54","src/droppable.directive.ts:59","src/droppable.directive.ts:61","start","stop","subject","subscrib","subscript","there'","this.currentdragsubscript","this.currentdragsubscription.unsubscrib","this.dragenter.next","this.draggablehelper.currentdrag.subscrib","this.dragleave.next","this.dragover.next","this.drop.next","this.element.nativeelement.getboundingclientrect","this.zone.run","todo","true","type","via","void","way","zone"],"interfaces/Coordinates.html":["0","allow","along","angular/cor","any).eventlistenersubscriptions[typ","axi","be","behaviour","boolean","call","candrag","changes['dragaxi","checkeventlisten","class","clienti","clientx","const","constructor","control","coordin","currentdrag","currentdrag.complet","currentdrag.next","cursor","custom","data","defin","delet","devic","direct","document","drag","dragaxi","dragcursor","dragend","draggabl","draggabledirect","draggablehelp","dragpointerdown","dragsnapgrid","dragstart","drop","dropdata","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","file","filter","filter(([previ","ghost","ghostdragen","grid","haseventlisten","helper.provid","hidden","implement","import","index","info","input","interfac","map","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","merg","mergemap","mergemap((pointerdownev","mous","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","new","next","next.i","next.x","ngonchanges(chang","ngondestroy","ngoninit","ngzone","none","null","number","o","object","object.keys(this.eventlistenersubscriptions).foreach(typ","object.keys(this.eventlistenersubscriptions).length","observ","on","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","output","pairwis","pass","pipe","pipe(filt","pipe(map(([previ","pipe(shar","pipe(takeuntil(merge(this.pointerup","pointer","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pipe(pairwis","pointerdrag.pipe(take(1)).pipe(map(valu","pointerev","pointermov","pointermove.pipe(take(1)).subscrib","pointermove.pipe(takelast(1)).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","press","previou","previous.i","previous.x","privat","properti","public","render","renderer2","result","return","rxjs/observ","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takelast","rxjs/operators/takeuntil","rxjs/subject","selector","setcsstransform(valu","setcursor(valu","share","show","simplechang","snap","snapgrid","sourc","src/draggable.directive.t","src/draggable.directive.ts:28","src/draggable.directive.ts:29","start","string","subject","subscrib","take","takelast","takeuntil","this.candrag","this.checkeventlisten","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.draggablehelper.currentdrag.next(currentdrag","this.dragging.next","this.dragpointerdown.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.dropdata","this.element.nativeel","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(nul","this.setcursor(this.dragcursor","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","touch","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","transformattribut","transformattributes.foreach(transformattribut","true","type","unsubscribeeventlisten","us","validatedrag","valu","void","webkit","x","y","y}px","zone"],"interfaces/DragAxis.html":["0","allow","along","angular/cor","any).eventlistenersubscriptions[typ","axi","be","behaviour","boolean","call","candrag","changes['dragaxi","checkeventlisten","class","clienti","clientx","const","constructor","control","coordin","currentdrag","currentdrag.complet","currentdrag.next","cursor","custom","data","defin","delet","devic","direct","document","drag","dragaxi","dragcursor","dragend","draggabl","draggabledirect","draggablehelp","dragpointerdown","dragsnapgrid","dragstart","drop","dropdata","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","file","filter","filter(([previ","ghost","ghostdragen","grid","haseventlisten","helper.provid","hidden","implement","import","index","info","input","interfac","map","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","merg","mergemap","mergemap((pointerdownev","mous","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","new","next","next.i","next.x","ngonchanges(chang","ngondestroy","ngoninit","ngzone","none","null","number","o","object","object.keys(this.eventlistenersubscriptions).foreach(typ","object.keys(this.eventlistenersubscriptions).length","observ","on","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","output","pairwis","pass","pipe","pipe(filt","pipe(map(([previ","pipe(shar","pipe(takeuntil(merge(this.pointerup","pointer","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pipe(pairwis","pointerdrag.pipe(take(1)).pipe(map(valu","pointerev","pointermov","pointermove.pipe(take(1)).subscrib","pointermove.pipe(takelast(1)).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","press","previou","previous.i","previous.x","privat","properti","public","render","renderer2","result","return","rxjs/observ","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takelast","rxjs/operators/takeuntil","rxjs/subject","selector","setcsstransform(valu","setcursor(valu","share","show","simplechang","snap","snapgrid","sourc","src/draggable.directive.t","src/draggable.directive.ts:33","src/draggable.directive.ts:34","start","string","subject","subscrib","take","takelast","takeuntil","this.candrag","this.checkeventlisten","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.draggablehelper.currentdrag.next(currentdrag","this.dragging.next","this.dragpointerdown.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.dropdata","this.element.nativeel","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(nul","this.setcursor(this.dragcursor","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","touch","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","transformattribut","transformattributes.foreach(transformattribut","true","type","unsubscribeeventlisten","us","validatedrag","valu","void","webkit","x","y","y}px","zone"],"interfaces/DropData.html":["angular/cor","boolean","call","clienti","clientrect","clientx","complet","const","constructor","currentdragdata","currentdragdropdata","currentdragsubscript","defin","didoverlap","direct","distinctuntilchang","do","drag","drag.pip","drag.pipe(mergemap","draggabl","draggablehelp","dragleav","dragov","dragoveract","drop","dropdata","droppablerectangl","element","elementref","eventemitt","fals","file","filter","filter(([didoverlap","function","helper.provid","import","index","info","interfac","iscoordinatewithinrectangl","map","match","mergemap","move","new","ngondestroy","ngoninit","ngzone","number","observ","ondestroy","oninit","output","over","overlap","overlaps)).subscrib","overlaps.pipe(distinctuntilchang","overlaps.pipe(filter(overlapsnow","overlapschang","overlapsnow","overlapsnow)).subscrib","pairwis","pipe","pipe(filter(overlapsnow","pipe(pairwis","privat","properti","rect","rect.left","rect.top","result","return","rxj","rxjs/observ","rxjs/operators/distinctuntilchang","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/subject","rxjs/subscript","see","sourc","src/droppable.directive.t","src/droppable.directive.ts:34","stop","subject","subscrib","subscript","there'","this.currentdragsubscript","this.currentdragsubscription.unsubscrib","this.dragenter.next","this.draggablehelper.currentdrag.subscrib","this.dragleave.next","this.dragover.next","this.drop.next","this.element.nativeelement.getboundingclientrect","this.zone.run","todo","true","type","via","void","way","zone"],"interfaces/PointerEvent.html":["0","allow","along","angular/cor","any).eventlistenersubscriptions[typ","axi","be","behaviour","boolean","call","candrag","changes['dragaxi","checkeventlisten","class","clienti","clientx","const","constructor","control","coordin","currentdrag","currentdrag.complet","currentdrag.next","cursor","custom","data","defin","delet","devic","direct","document","drag","dragaxi","dragcursor","dragend","draggabl","draggabledirect","draggablehelp","dragpointerdown","dragsnapgrid","dragstart","drop","dropdata","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","file","filter","filter(([previ","ghost","ghostdragen","grid","haseventlisten","helper.provid","hidden","implement","import","index","info","input","interfac","map","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","merg","mergemap","mergemap((pointerdownev","mous","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","new","next","next.i","next.x","ngonchanges(chang","ngondestroy","ngoninit","ngzone","none","null","number","o","object","object.keys(this.eventlistenersubscriptions).foreach(typ","object.keys(this.eventlistenersubscriptions).length","observ","on","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","output","pairwis","pass","pipe","pipe(filt","pipe(map(([previ","pipe(shar","pipe(takeuntil(merge(this.pointerup","pointer","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pipe(pairwis","pointerdrag.pipe(take(1)).pipe(map(valu","pointerev","pointermov","pointermove.pipe(take(1)).subscrib","pointermove.pipe(takelast(1)).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","press","previou","previous.i","previous.x","privat","properti","public","render","renderer2","result","return","rxjs/observ","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takelast","rxjs/operators/takeuntil","rxjs/subject","selector","setcsstransform(valu","setcursor(valu","share","show","simplechang","snap","snapgrid","sourc","src/draggable.directive.t","src/draggable.directive.ts:45","src/draggable.directive.ts:46","src/draggable.directive.ts:47","start","string","subject","subscrib","take","takelast","takeuntil","this.candrag","this.checkeventlisten","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.draggablehelper.currentdrag.next(currentdrag","this.dragging.next","this.dragpointerdown.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.dropdata","this.element.nativeel","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(nul","this.setcursor(this.dragcursor","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","touch","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","transformattribut","transformattributes.foreach(transformattribut","true","type","unsubscribeeventlisten","us","validatedrag","valu","void","webkit","x","y","y}px","zone"],"interfaces/SnapGrid.html":["0","allow","along","angular/cor","any).eventlistenersubscriptions[typ","axi","be","behaviour","boolean","call","candrag","changes['dragaxi","checkeventlisten","class","clienti","clientx","const","constructor","control","coordin","currentdrag","currentdrag.complet","currentdrag.next","cursor","custom","data","defin","delet","devic","direct","document","drag","dragaxi","dragcursor","dragend","draggabl","draggabledirect","draggablehelp","dragpointerdown","dragsnapgrid","dragstart","drop","dropdata","element","elementref","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","file","filter","filter(([previ","ghost","ghostdragen","grid","haseventlisten","helper.provid","hidden","implement","import","index","info","input","interfac","map","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","merg","mergemap","mergemap((pointerdownev","mous","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","new","next","next.i","next.x","ngonchanges(chang","ngondestroy","ngoninit","ngzone","none","null","number","o","object","object.keys(this.eventlistenersubscriptions).foreach(typ","object.keys(this.eventlistenersubscriptions).length","observ","on","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","output","pairwis","pass","pipe","pipe(filt","pipe(map(([previ","pipe(shar","pipe(takeuntil(merge(this.pointerup","pointer","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pipe(pairwis","pointerdrag.pipe(take(1)).pipe(map(valu","pointerev","pointermov","pointermove.pipe(take(1)).subscrib","pointermove.pipe(takelast(1)).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","press","previou","previous.i","previous.x","privat","properti","public","render","renderer2","result","return","rxjs/observ","rxjs/observable/merg","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takelast","rxjs/operators/takeuntil","rxjs/subject","selector","setcsstransform(valu","setcursor(valu","share","show","simplechang","snap","snapgrid","sourc","src/draggable.directive.t","src/draggable.directive.ts:38","src/draggable.directive.ts:39","start","string","subject","subscrib","take","takelast","takeuntil","this.candrag","this.checkeventlisten","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.draggablehelper.currentdrag.next(currentdrag","this.dragging.next","this.dragpointerdown.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.dropdata","this.element.nativeel","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(nul","this.setcursor(this.dragcursor","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","touch","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","transformattribut","transformattributes.foreach(transformattribut","true","type","unsubscribeeventlisten","us","validatedrag","valu","void","webkit","x","y","y}px","zone"],"miscellaneous/functions.html":["clienti","clientx","descript","function","index","iscoordinatewithinrectangl","iscoordinatewithinrectangle(clientx","match","miscellan","name","number","option","paramet","rect","result","src/droppable.directive.t","type","typerefer"],"miscellaneous/variables.html":["default","index","match","miscellan","move","move_cursor","result","src/draggable.directive.t","string","type","valu","variabl"],"miscellaneous/typealiases.html":["alias","index","match","miscellan","result","src/draggable.directive.t","type","typealias","validatedrag"]},"length":16},"tokenStore":{"root":{"0":{"0":{"docs":{},"f":{"6":{"9":{"8":{"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.009398496240601503}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007518796992481203}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}},"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009370816599732263},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.011254019292604502},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.011254019292604502},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.011075949367088608},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.011254019292604502}},".":{"1":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"2":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"3":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"4":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"5":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"6":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"docs":{}}},"1":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007518796992481203}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}},"2":{"6":{"5":{"docs":{},"b":{"docs":{},"e":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.020676691729323307}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"6":{"docs":{},"a":{"3":{"docs":{},"d":{"docs":{},"f":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}}},"docs":{}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},"a":{"2":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"docs":{}}},"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"1":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"docs":{}}},"2":{"0":{"1":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.018796992481203006},"license.html":{"ref":"license.html","tf":0.01020408163265306}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.020676691729323307}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}},"2":{"2":{"9":{"1":{"4":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},"c":{"docs":{},"f":{"docs":{},"a":{"7":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"docs":{}}}}},"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},".":{"0":{"docs":{},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"docs":{}}},"3":{"4":{"4":{"5":{"3":{"3":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"docs":{},"f":{"docs":{},"d":{"4":{"docs":{},"b":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"docs":{}}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},"c":{"9":{"9":{"docs":{},"d":{"4":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"4":{"1":{"5":{"9":{"docs":{},"c":{"docs":{},"e":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}}},"docs":{}},"docs":{}},"2":{"6":{"3":{"1":{"docs":{},"b":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"docs":{}},"docs":{}},"docs":{}},"4":{"docs":{},"e":{"docs":{},"a":{"6":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}}}},"5":{"docs":{},"c":{"6":{"docs":{},"b":{"5":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"docs":{}}},"docs":{}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}},".":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"a":{"5":{"8":{"docs":{},"c":{"6":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"5":{"0":{"docs":{},"d":{"1":{"9":{"6":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"2":{"docs":{},"e":{"9":{"docs":{},"a":{"2":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}}},"docs":{}}},"7":{"docs":{},"d":{"docs":{},"d":{"4":{"3":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"changelog.html":{"ref":"changelog.html","tf":0.007518796992481203}},".":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401}}},"5":{"docs":{},".":{"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"docs":{}},"a":{"docs":{},"c":{"docs":{},"a":{"6":{"7":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"docs":{}},"docs":{}}}}},"6":{"0":{"1":{"6":{"docs":{},"f":{"1":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"5":{"2":{"docs":{},"d":{"6":{"3":{"2":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"7":{"0":{"9":{"3":{"2":{"7":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"docs":{},"c":{"7":{"docs":{},"f":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"9":{"docs":{},"f":{"2":{"4":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"docs":{}},"docs":{}}},"docs":{}},"3":{"docs":{},"d":{"6":{"5":{"docs":{},"d":{"7":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"docs":{}},"docs":{}}},"4":{"7":{"6":{"3":{"0":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"3":{"1":{"9":{"0":{"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},"d":{"8":{"5":{"9":{"docs":{},"c":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"8":{"0":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}},"docs":{}},"docs":{}},"9":{"7":{"docs":{},"b":{"3":{"docs":{},"f":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"docs":{}}},"docs":{}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"9":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},"e":{"5":{"docs":{},"a":{"docs":{},"c":{"9":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}}}},"docs":{}},"f":{"docs":{},"c":{"docs":{},"a":{"1":{"2":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"docs":{}},"docs":{}}}}},"docs":{},"a":{"7":{"7":{"docs":{},"d":{"0":{"7":{"docs":{},"a":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.029197080291970802},"changelog.html":{"ref":"changelog.html","tf":0.016917293233082706}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"y":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401}},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401},"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013157894736842105}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.013157894736842105},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08333333333333333}}}}}},"x":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0107095046854083},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.011254019292604502},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.017684887459807074},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.011075949367088608},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.011254019292604502}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"c":{"docs":{},"c":{"9":{"0":{"8":{"0":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"b":{"docs":{},"d":{"9":{"2":{"5":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.009398496240601503}}}}},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.14285714285714285}}}}}},"u":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.02631578947368421}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"c":{"6":{"7":{"7":{"1":{"docs":{},"e":{"docs":{},"b":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.013386880856760375},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.017985611510791366},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.01607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.025380710659898477},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.020569620253164556},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01607717041800643},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.07407407407407407}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.013386880856760375},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.02158273381294964},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.01607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.030456852791878174},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.020569620253164556},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01607717041800643},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.037037037037037035}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.022556390977443608}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401},"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}}}}}}}}},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009370816599732263},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.01079136690647482},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.011254019292604502},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.011254019292604502},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.015228426395939087},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.011075949367088608},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.011254019292604502}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"o":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006693440428380187},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":5.009646302250804},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.008038585209003215},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007911392405063292},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.008038585209003215}}}}}}},"p":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.04081632653061224}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.02158273381294964},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.030456852791878174}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.014388489208633094},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007518796992481203},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"i":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.013386880856760375},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.025179856115107913},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.008038585209003215},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.008038585209003215},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.015228426395939087},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007911392405063292},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.008038585209003215}}}},"s":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"u":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.006430868167202572},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.006430868167202572},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.006329113924050633},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.006430868167202572}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.016917293233082706}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":3.333333333333333}}}}},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}}}},"d":{"2":{"docs":{},"f":{"docs":{},"d":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}},"7":{"docs":{},"c":{"9":{"2":{"5":{"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.04081632653061224}}}}}},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.021897810218978103}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.021897810218978103}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}}}}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.029197080291970802}}}}}},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705}}}}}},"i":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.013386880856760375},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.02158273381294964},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.037037037037037035}}}}}}}},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":5.004016064257028},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":5.0071942446043165},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}}}}},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}},"o":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.021897810218978103},"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006693440428380187},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.008038585209003215},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.008038585209003215},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007911392405063292},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.008038585209003215}}}}}}}},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.029197080291970802},"changelog.html":{"ref":"changelog.html","tf":0.03571428571428571},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.028112449799196786},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.01607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.015822784810126583},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01607717041800643}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902},"modules.html":{"ref":"modules.html","tf":0.14285714285714285},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":5.061224489795919}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008032128514056224},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":5.006430868167203},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547}}}}},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.029197080291970802},"changelog.html":{"ref":"changelog.html","tf":0.04887218045112782},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.02877697841726619},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.02030456852791878},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.10204081632653061},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":5.002677376171352},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.04081632653061224},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.025179856115107913},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.015228426395939087},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.01079136690647482},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}},"o":{"docs":{},"v":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.01079136690647482},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.014388489208633094},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.02030456852791878}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.029197080291970802},"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.017985611510791366},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"changelog.html":{"ref":"changelog.html","tf":0.007518796992481203}},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"u":{"docs":{},"m":{"docs":{},"d":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}},".":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"u":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.10204081632653061},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":5.003597122302159}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.025179856115107913},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":5.055837563451776},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}},"c":{"0":{"docs":{},"f":{"8":{"6":{"3":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}}},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"changelog.html":{"ref":"changelog.html","tf":0.02631578947368421},"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.02677376171352075},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.014388489208633094},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.022508038585209004},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.022508038585209004},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.02689873417721519},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.022508038585209004}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}},"docs":{}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.012048192771084338},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.02877697841726619},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.008038585209003215},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.008038585209003215},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.02030456852791878},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007911392405063292},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.008038585209003215}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007518796992481203},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.022757697456492636},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.05755395683453238},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.014469453376205787},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.014469453376205787},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.03553299492385787},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.014240506329113924},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.014469453376205787}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.014388489208633094},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.061224489795918366},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008032128514056224},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00964630225080386},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00964630225080386},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.00949367088607595},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00964630225080386}}}}}}}},"f":{"2":{"9":{"docs":{},"b":{"4":{"2":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}},"l":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"license.html":{"ref":"license.html","tf":0.01020408163265306},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"(":{"docs":{},"(":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}},"f":{"docs":{},"o":{"docs":{},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.02819548872180451}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"b":{"7":{"5":{"7":{"1":{"1":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.016917293233082706}}}}}}},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.703703703703703}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.021897810218978103}},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"9":{"2":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.006430868167202572},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.006430868167202572},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.006329113924050633},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.006430868167202572}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.021897810218978103},"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.08163265306122448},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.01740294511378849},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.03597122302158273},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.02090032154340836},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.02090032154340836},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.050761421319796954},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.020569620253164556},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.02090032154340836}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.037037037037037035},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08333333333333333}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.051094890510948905}}}}},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":5.008038585209003},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":5.008038585209003},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":5.01015228426396},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":5.007911392405063},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":5.008038585209003}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.012048192771084338},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.011254019292604502},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.011254019292604502},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.011075949367088608},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.011254019292604502}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}},"f":{"docs":{},"o":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.07407407407407407}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"x":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"license.html":{"ref":"license.html","tf":3.343537414965986}}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"a":{"docs":{},"z":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}}}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"w":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401},"overview.html":{"ref":"overview.html","tf":0.18181818181818182},"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013},"license.html":{"ref":"license.html","tf":0.02040816326530612},"modules.html":{"ref":"modules.html","tf":0.2857142857142857},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.04081632653061224},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.07407407407407407},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.11764705882352941},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.16666666666666666}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"(":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"license.html":{"ref":"license.html","tf":0.02040816326530612}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.3703703703703702},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.3921568627450975},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.4166666666666665}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"modules.html":{"ref":"modules.html","tf":10.142857142857142},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":5.020408163265306}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.04081632653061224}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"u":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}},"u":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008032128514056224},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00964630225080386},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00964630225080386},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.012658227848101266},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00964630225080386}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.009398496240601503},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705}},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.17647058823529413}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}},"z":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736}}}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736}}}}}}}}}}}},"s":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}},"n":{"docs":{},"g":{"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}},"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.061224489795918366}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.014388489208633094},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.009398496240601503}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.058394160583941604}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"m":{"docs":{},"e":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.037037037037037035}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"w":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0107095046854083},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.01079136690647482},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.012861736334405145},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.012861736334405145},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.015228426395939087},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.012658227848101266},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.012861736334405145}}},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008032128514056224},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.014388489208633094},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.01607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00964630225080386},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.02030456852791878},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.015822784810126583},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.01607717041800643},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.14814814814814814}}}}}}}},"o":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.090909090909092}}}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.014388489208633094},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939}},"s":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.01079136690647482},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.015228426395939087}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.01079136690647482},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.015228426395939087}},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.009398496240601503},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.037037037037037035}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009370816599732263},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.02158273381294964},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.008038585209003215},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.008038585209003215},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.02030456852791878},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007911392405063292},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.008038585209003215}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006693440428380187},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.008038585209003215},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.008038585209003215},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":5.0094936708860756},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.008038585209003215}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}},"docs":{}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"s":{"docs":{},"s":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.020080321285140562},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.01079136690647482},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.024115755627009645},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.024115755627009645},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.015228426395939087},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.023734177215189875},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.024115755627009645}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"t":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.037037037037037035}}}}}}},"i":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}},"s":{"docs":{},"s":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"c":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008032128514056224},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00964630225080386},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00964630225080386},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.00949367088607595},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00964630225080386}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}},"p":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401},"overview.html":{"ref":"overview.html","tf":0.18181818181818182},"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013},"license.html":{"ref":"license.html","tf":0.02040816326530612},"modules.html":{"ref":"modules.html","tf":0.2857142857142857},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.04081632653061224},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.07407407407407407},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.11764705882352941},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.16666666666666666}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"e":{"docs":{},"r":{"2":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}},"docs":{}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009370816599732263},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.011254019292604502},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.011254019292604502},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.011075949367088608},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.011254019292604502}}}}}},"c":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.07407407407407407}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.043795620437956206},"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"x":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}},"m":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401}}}}}},"a":{"docs":{},"m":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}},"t":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401},"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09183673469387756}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.3479318734793186},"changelog.html":{"ref":"changelog.html","tf":3.3370927318295736},"license.html":{"ref":"license.html","tf":3.333333333333333},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.11764705882352941}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"o":{"docs":{},"p":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.007518796992481203},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":5.004823151125402}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"j":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}},"r":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"o":{"docs":{},"w":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.012048192771084338},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.014469453376205787},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.014469453376205787},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.014240506329113924},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.014469453376205787}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"p":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.014388489208633094},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/DragAndDropModule.html":{"ref":"modules/DragAndDropModule.html","tf":0.02040816326530612}},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08333333333333333}},"s":{"docs":{},":":{"1":{"0":{"0":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374}}},"5":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374}}},"docs":{}},"docs":{}},"2":{"8":{"docs":{"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643}}},"9":{"docs":{"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643}}},"docs":{}},"3":{"3":{"docs":{"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643}}},"4":{"docs":{"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643}}},"8":{"docs":{"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"9":{"docs":{"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"docs":{}},"4":{"5":{"docs":{"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582}}},"6":{"docs":{"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582}}},"7":{"docs":{"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582}}},"docs":{}},"5":{"9":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374}}},"docs":{}},"6":{"4":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374}}},"9":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374}}},"docs":{}},"7":{"4":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374}}},"9":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374}}},"docs":{}},"8":{"4":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374}}},"9":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374}}},"docs":{}},"9":{"5":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.037037037037037035}},"s":{"docs":{},":":{"3":{"4":{"docs":{"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}},"docs":{}},"4":{"4":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736}}},"9":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736}}},"docs":{}},"5":{"4":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736}}},"9":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736}}},"docs":{}},"6":{"1":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}},"k":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0364963503649635}},":":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0072992700729927005}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009370816599732263},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.011254019292604502},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.011254019292604502},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.011075949367088608},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.011254019292604502}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006693440428380187},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.008038585209003215},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.008038585209003215},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007911392405063292},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.008038585209003215}}}}},"u":{"docs":{},"p":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006693440428380187},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.008038585209003215},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.008038585209003215},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007911392405063292},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.008038585209003215}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.012048192771084338},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.014469453376205787},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.014469453376205787},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.014240506329113924},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.014469453376205787}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.004016064257028112},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"`":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.00535475234270415},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.014388489208633094},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.006430868167202572},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.006430868167202572},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.02030456852791878},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.006329113924050633},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.006430868167202572}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"'":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}}}},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009370816599732263},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.011254019292604502},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.011254019292604502},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.014240506329113924},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.011254019292604502}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}},"d":{"docs":{},"o":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.006693440428380187},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.008038585209003215},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.008038585209003215},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.007911392405063292},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.008038585209003215}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.003215434083601286},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.003215434083601286},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0031645569620253164},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.003215434083601286}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009370816599732263},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.006430868167202572},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.006430868167202572},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.006329113924050633},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.006430868167202572}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.013386880856760375},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.02158273381294964},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.006329113924050633},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.037037037037037035},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.08333333333333333}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.07407407407407407}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401},"changelog.html":{"ref":"changelog.html","tf":0.009398496240601503},"license.html":{"ref":"license.html","tf":0.02040816326530612},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.002677376171352075},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}},"e":{"docs":{},"r":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0037593984962406013}}}}},"m":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.014598540145985401}}}},"a":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.008032128514056224},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.25}}}}}}}}}}},"u":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.009370816599732263},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.00482315112540193},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.00482315112540193},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.004746835443037975},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.00482315112540193},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.058823529411764705}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.725490196078431}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.029451137884872823},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.007194244604316547},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.03536977491961415},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.03536977491961415},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.01015228426395939},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.03481012658227848},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.03536977491961415}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.005639097744360902}}},"s":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.02040816326530612}}}}}}}},"y":{"docs":{"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.0035971223021582736},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030612244897959183}}}}}}}},"e":{"docs":{},"b":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}}}},"x":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0214190093708166},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.027331189710610933},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.027331189710610933},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.022151898734177215},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.027331189710610933}}},"y":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0214190093708166},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.027331189710610933},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.027331189710610933},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.022151898734177215},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.027331189710610933}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006}}}}}}}}},"}":{"docs":{},"p":{"docs":{},"x":{"docs":{"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.0018796992481203006},"directives/DraggableDirective.html":{"ref":"directives/DraggableDirective.html","tf":0.0013386880856760374},"directives/DroppableDirective.html":{"ref":"directives/DroppableDirective.html","tf":0.01079136690647482},"interfaces/Coordinates.html":{"ref":"interfaces/Coordinates.html","tf":0.001607717041800643},"interfaces/DragAxis.html":{"ref":"interfaces/DragAxis.html","tf":0.001607717041800643},"interfaces/DropData.html":{"ref":"interfaces/DropData.html","tf":0.005076142131979695},"interfaces/PointerEvent.html":{"ref":"interfaces/PointerEvent.html","tf":0.0015822784810126582},"interfaces/SnapGrid.html":{"ref":"interfaces/SnapGrid.html","tf":0.001607717041800643}}}}}},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.01020408163265306}}}}}}},"length":2028},"corpusTokens":["0","0.1.0","0.1.1","0.2.0","0.2.1","0.2.2","0.2.3","0.3.0","0.3.1","0.4.0","0.5.0","0.5.1","0.5.2","0.5.3","0.5.4","0.6.0","00f6989","01","03","04","06","09","1","1.0.0","1.0.1","1.0.2","1.1.0","1.1.1","10","11","12","1265bee","14","16a3df8","17","17a2ccc","18","2","2.0.0","20","2016","2017","21","22","222914b","23","24","26","26cfa7e","27","3","3445337","38fd4b5","3c99d40","4","4.0","4159ce2","42631bc","44ea67","45c6b5f","4a58c61","5","5.0","5.5.x","50d1962","52e9a22","57dd436","5aca67d","6","6016f12","652d632","7","709327c","710c7f7","729f24e","73d65d7","7476301","7831903","7d859c1","8","8000","897b3fe","9","9e5ac95","9fca12a","a77d07a","abov","action","actual","ad","add","alias","allow","along","and/or","angular","angular/cor","any).eventlistenersubscriptions[typ","app","appli","aris","associ","author","auto","axi","back","bcc9080","be","bebd925","behaviour","boolean","bootstrap","break","brows","bug","build","c","c6771eb","call","candrag","case","caus","chang","changelog","changes['dragaxi","charg","checkeventlisten","claim","class","click","clienti","clientrect","clientx","close","come","commit","complet","compon","condit","config","connect","console.log('el","const","constructor","constructor(el","content","continu","contract","control","coordin","copi","copyright","creat","current","currentdrag","currentdrag.complet","currentdrag.next","currentdragdata","currentdragdropdata","currentdragsubscript","cursor","custom","customis","d2fdcde","d7c9256","damag","data","dc0f863","deal","declar","default","defin","delet","demo","demoapp","demomodul","depend","descript","destroy","dev","develop","devic","didn't","didoverlap","direct","directori","disabl","dispos","distinctuntilchang","distribut","do","document","dont","drag","drag.pip","drag.pipe(mergemap","draganddropmodul","draganddropmodule.forroot","dragaxi","dragaxix","dragcontain","dragcursor","dragend","dragend(ev","dragent","draggabl","draggable.direct","draggabledirect","draggablehelp","dragleav","dragov","dragoveract","dragpointerdown","dragsnapgrid","dragstart","drop","drop.module.t","dropdata","droppabl","droppable.direct","droppable.j","droppable.umd.j","droppable/bundles/angular","droppable/demo","droppable/dist/umd/angular","droppable/doc","droppabledirect","droppablerectangl","droppablethen","droppeddata","duplic","effect","element","elementref","emit","end","enter","environ","error","event","event.changedtouches[0].clienti","event.changedtouches[0].clientx","event.clienti","event.clientx","event.touches[0].clienti","event.touches[0].clientx","eventemitt","eventlistenersubscript","export","express","f29b424","fals","fb75711","featur","file","filter","filter(([didoverlap","filter(([previ","find","fire","firefox","fit","fix","follow","forroot","free","function","furnish","gener","get","ghost","ghostdragen","grant","grid","guidelin","haseventlisten","helper.provid","here","herebi","hidden","higher","highlight","holder","hover","https://mattlewis92.github.io/angular","icon","implement","impli","import","improv","includ","index","info","input","insid","instal","interact","interfac","iscoordinatewithinrectangl","iscoordinatewithinrectangle(clientx","item","kind","lazili","leav","lettabl","lewi","liabil","liabl","librari","licens","limit","listen","local","lock","log","longer","loosen","make","map","map((movedata","map((pointermoveev","match","math.floor(movedata.i","math.floor(movedata.x","matt","merchant","merg","mergemap","mergemap((pointerdownev","metadata","method","mimic","miscellan","mit","modifi","modul","modulewithprovid","mous","mousedown","mouseent","mouseev","mouseleav","mousemov","mousemoveev","mousemoveevent.clienti","mousemoveevent.clientx","mouseup","move","move_cursor","movedata","movedata.i","movedata.x","moz","ms","mwldraggabl","mwldroppabl","name","nativ","need","new","next","next.i","next.x","ng","ng4","ngmodul","ngonchanges(chang","ngondestroy","ngoninit","ngzone","node.j","none","noninfring","notabl","notic","now","npm","null","number","o","object","object.keys(this.eventlistenersubscriptions).foreach(typ","object.keys(this.eventlistenersubscriptions).length","observ","obtain","old","on","onc","onchang","ondestroy","oninit","onmousedown(ev","onmouseent","onmouseleav","onmouseup(ev","ontouchend(ev","ontouchstart(ev","oper","option","origin","otherwis","out","output","outsid","over","overlap","overlaps)).subscrib","overlaps.pipe(distinctuntilchang","overlaps.pipe(filter(overlapsnow","overlapschang","overlapsnow","overlapsnow)).subscrib","overview","packag","packagr","pairwis","paramet","particular","pass","path","peer","perform","permiss","permit","person","pipe","pipe(filt","pipe(filter(overlapsnow","pipe(map(([previ","pipe(pairwis","pipe(shar","pipe(takeuntil(merge(this.pointerup","pointer","pointerdown","pointerdownevent.clienti","pointerdownevent.clientx","pointerdownevent.event.preventdefault","pointerdrag","pointerdrag.pipe(pairwis","pointerdrag.pipe(take(1)).pipe(map(valu","pointerev","pointermov","pointermove.pipe(take(1)).subscrib","pointermove.pipe(takelast(1)).subscrib","pointermoveevent.clienti","pointermoveevent.clientx","pointermoveevent.event.preventdefault","pointerup","port","portion","posit","power","prepar","press","prevent","previou","previous.i","previous.x","privat","project","properti","prototyp","provid","public","publish","purpos","rect","rect.left","rect.top","regular","releas","releaselicens","reload","remov","renam","render","renderer2","repliat","repo","requir","respect","restrict","result","return","revert","right","run","rxj","rxjs/observ","rxjs/observable/merg","rxjs/operators/distinctuntilchang","rxjs/operators/filt","rxjs/operators/map","rxjs/operators/mergemap","rxjs/operators/pairwis","rxjs/operators/shar","rxjs/operators/tak","rxjs/operators/takelast","rxjs/operators/takeuntil","rxjs/subject","rxjs/subscript","same","save","seamless","see","selector","sell","server","setcsstransform(valu","setcursor(valu","shall","share","show","simplechang","snap","snapgrid","softwar","sourc","src/drag","src/draggable.directive.t","src/draggable.directive.ts:100","src/draggable.directive.ts:105","src/draggable.directive.ts:28","src/draggable.directive.ts:29","src/draggable.directive.ts:33","src/draggable.directive.ts:34","src/draggable.directive.ts:38","src/draggable.directive.ts:39","src/draggable.directive.ts:45","src/draggable.directive.ts:46","src/draggable.directive.ts:47","src/draggable.directive.ts:59","src/draggable.directive.ts:64","src/draggable.directive.ts:69","src/draggable.directive.ts:74","src/draggable.directive.ts:79","src/draggable.directive.ts:84","src/draggable.directive.ts:89","src/draggable.directive.ts:95","src/droppable.directive.t","src/droppable.directive.ts:34","src/droppable.directive.ts:44","src/droppable.directive.ts:49","src/droppable.directive.ts:54","src/droppable.directive.ts:59","src/droppable.directive.ts:61","standard","start","static","stop","string","style","subject","sublicens","subscrib","subscript","substanti","system.j","tabl","take","takelast","takeuntil","templat","test","test:watch","text","there'","this.candrag","this.checkeventlisten","this.currentdragsubscript","this.currentdragsubscription.unsubscrib","this.dragaxis.i","this.dragaxis.x","this.dragend.next","this.dragenter.next","this.draggablehelper.currentdrag.next(currentdrag","this.draggablehelper.currentdrag.subscrib","this.dragging.next","this.dragleave.next","this.dragover.next","this.dragpointerdown.next","this.dragsnapgrid.i","this.dragsnapgrid.x","this.dragstart.next","this.drop.next","this.dropdata","this.element.nativeel","this.element.nativeelement.getboundingclientrect","this.eventlistenersubscriptions.mousedown","this.eventlistenersubscriptions.mouseent","this.eventlistenersubscriptions.mouseleav","this.eventlistenersubscriptions.mousemov","this.eventlistenersubscriptions.mouseup","this.eventlistenersubscriptions.touchcancel","this.eventlistenersubscriptions.touchend","this.eventlistenersubscriptions.touchmov","this.eventlistenersubscriptions.touchstart","this.ghostdragen","this.onmousedown(ev","this.onmouseent","this.onmouseleav","this.onmouseup(ev","this.ontouchend(ev","this.ontouchstart(ev","this.pointerdown","this.pointerdown.complet","this.pointerdown.next","this.pointermov","this.pointermove.complet","this.pointermove.next","this.pointerup.complet","this.pointerup.next","this.renderer.listen","this.renderer.setstyl","this.renderer.setstyle(this.element.nativeel","this.setcsstransform(`translate(${x}px","this.setcsstransform(nul","this.setcursor(nul","this.setcursor(this.dragcursor","this.unsubscribeeventlisten","this.validatedrag","this.zone.run","this.zone.runoutsideangular","through","todo","tort","touch","touchcancel","touchend","touchev","touchmov","touchmoveev","touchmoveevent.targettouches[0].clienti","touchmoveevent.targettouches[0].clientx","touchstart","transform","transformattribut","transformattributes.foreach(transformattribut","true","type","typealias","typerefer","umd","unsubscribeeventlisten","until","updat","upgrad","us","user","valid","validatedrag","valu","variabl","version","via","view","void","warranti","way","webkit","whether","without","work","wors","x","y","yourself","y}px","zone"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular 5.0+ drag and drop\n\n\n\n\n\n\n\nDemo\nhttps://mattlewis92.github.io/angular-draggable-droppable/demo/\nTable of contents\n\nAbout\nInstallation\nDocumentation\nDevelopment\nLicense\n\nAbout\nObservable powered drag and drop for angular 5.0+\nInstallation\nInstall through npm:\nnpm install --save angular-draggable-droppableThen use it in your app like so:\nimport { Component, NgModule } from '@angular/core';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\n\n@NgModule({\n  declarations: [DemoApp],\n  imports: [DragAndDropModule.forRoot()],\n  bootstrap: [DemoApp]\n})\nclass DemoModule {}\n\n@Component({\n  selector: 'demo-app',\n  template: `\n    Drag me!\n    \n      Drop here\n      Item dropped here with data: \"{{ droppedData }}\"!\n    \n  `\n})\nclass DemoApp {\n\n  droppedData: string;\n\n  dragEnd(event) {\n    console.log('Element was dragged', event);\n  }\n\n}You may also find it useful to view the demo source.\nDocumentation\nAll documentation is auto-generated from the source and can be viewed here:\nhttps://mattlewis92.github.io/angular-draggable-droppable/docs/\nDevelopment\nPrepare your environment\n\nInstall Node.js and NPM (should come with)\nInstall local dev dependencies: npm install while current directory is this repo\n\nDevelopment server\nRun npm start to start a development server on port 8000 with auto reload + tests.\nTesting\nRun npm test to run tests once or npm run test:watch to continually run tests.\nRelease\nnpm run releaseLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n2.0.0 (2017-12-26)\nBug Fixes\n\nonly call drag start and end outputs when the element is actually dragged (45c6b5f), closes #21 #20\n\nFeatures\n\nupgrade to angular 5 (4159ce2)\nuse lettable rxjs operators (9fca12a)\nuse ng-packagr for building the package (57dd436)\ndragPointerDown: add a new output to repliate the old dragStart behaviour (4a58c61)\n\nBREAKING CHANGES\n\nThe UMD module path has changed from\nangular-draggable-droppable/dist/umd/angular-draggable-droppable.js to\nangular-draggable-droppable/bundles/angular-draggable-droppable.umd.js. System.js users will need\nto update their config.\nrxjs operators will now no longer be added to the observable prototype. Also rxjs\n= 5.5.x or higher is required\n\n\nAngular 5 or higher is now required to use this package\ndrag start and end events are now only called when the element is actually dragged,\nuse regular mousedown and mouseup events to get the old behaviour\n\n\n1.1.1 (2017-10-21)\nBug Fixes\n\nallow angular 5 peer dependency (1265bee)\n\n\n1.1.0 (2017-09-22)\nFeatures\n\ndraggable: allow the draggable cursor to be customised (897b3fe)\n\n\n1.0.2 (2017-09-18)\nBug Fixes\n\ndraggable: fire dragEnd event when the event was not dragged (73d65d7), closes #17\n\n\n1.0.1 (2017-04-14)\nBug Fixes\n\ndraggable: prevent text from being highlighted in firefox (7d859c1)\n\n\n1.0.0 (2017-03-24)\nFeatures\n\nng4: upgrade to angular 4 (42631bc)\n\nBREAKING CHANGES\n\nng4: angular 4.0 or higher is now required to use this library. The upgrade should be seamless for most users\n\n\n0.6.0 (2017-03-23)\nFeatures\n\ndraggable: make dragging work on touch devices (dc0f863)\n\n\n0.5.4 (2017-03-04)\nPerformance Improvements\n\ndraggable: lazily create all mouse event listeners (3c99d40)\n\n\n0.5.3 (2017-03-04)\nBug Fixes\n\nmove dependencies to dev (17a2ccc)\n\n\n0.5.2 (2017-03-04)\nBug Fixes\n\nloosen peer dependency to allow angular 4 (bcc9080)\n\nPerformance Improvements\n\ndraggable: lazily create the mouse move listener (bebd925)\nrun all event listeners outside of angulars zone (d7c9256)\n\n\n0.5.1 (2017-01-06)\nBug Fixes\n\ndraggable: allow draggable events to be clicked (44ea67e)\n\n\n0.5.0 (2016-12-21)\nFeatures\n\ndragAndDropModule: add forRoot method (00f6989)\n\nBREAKING CHANGES\n\ndragAndDropModule: You must now import the DragAndDropModule with the forRoot method\n\n\n0.4.0 (2016-12-18)\nFeatures\n\ndraggable: remove the dragContainer option (5aca67d)\n\nBREAKING CHANGES\n\ndraggable: the dragContainer option has been removed as it didn't work in all cases and can be\n\nimplemented yourself with the validateDrag option\n\n0.3.1 (2016-12-18)\nBug Fixes\n\ndraggable: make the dragEnd output respect the validateDrag input (26cfa7e)\n\n\n0.3.0 (2016-12-12)\nFeatures\n\ndraggable: add dragContainer option (fb75711), closes #10\n\n\n0.2.3 (2016-12-11)\nBug Fixes\n\ndraggable: allow events to be dragged back into their original positions (7831903)\n\n\n0.2.2 (2016-12-11)\nBug Fixes\n\ndraggable: only emit the dragEnd event once (52e9a22)\n\n\n0.2.1 (2016-12-10)\nBug Fixes\n\nrevert duplicate dragging fix as it caused worse errors (7476301)\n\n\n0.2.0 (2016-12-10)\nBug Fixes\n\ncompletely remove applied styled after dragging (3445337)\ndraggable: dont fire duplicate dragging events with the same coordinates (222914b), closes #6\ndraggable: when dragging is disabled, no drag events should be emitted (729f24e)\ndroppable: only allow dropping of events when the cursor is inside (652d632), closes #5\n\nFeatures\n\ndraggable: auto change the cursor to the move icon on hover (50d1962), closes #9\nsnapGrid: rename to dragSnapGrid (a77d07a), closes #7\nvalidateDrag: add the validate drag input (9e5ac95), closes #8\n\nBREAKING CHANGES\n\ndroppable: the drag enter, leave and drop events will not fire until cursor is inside the droppable element. This is to mimic how native drag and drop works\nsnapGrid: The snapGrid input has been renamed to dragSnapGrid\n\n\n0.1.1 (2016-12-09)\nBug Fixes\n\ndraggable: disable pointer events on the element when dragging (f29b424)\n\n\n0.1.0 (2016-11-27)\nBug Fixes\n\ndraggable: dispose of observables when the component is destroyed (710c7f7)\nprevent the default move move interaction on dragging (d2fdcde)\n\nFeatures\n\ndragAxix: allow the drag axis to be locked to just x and y (38fd4b5), closes #2\ndraggable: add mwlDraggable directive (c6771eb)\ndroppable: add the mwlDroppable directive (6016f12), closes #1\nghostDragEnabled: add option to disable the ghost dragging effect (709327c), closes #3\nsnapGrid: implement draggable snap grids (16a3df8), closes #4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2016 Matt Lewis\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        DragAndDropModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DragAndDropModule.html":{"url":"modules/DragAndDropModule.html","title":"module - DragAndDropModule","body":"\n                   \n\n\n\n\n  Modules\n  DragAndDropModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/drag-and-drop.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DraggableDirective\n                            \n                            \n                                DroppableDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DraggableDirective\n                            \n                            \n                                    DroppableDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DraggableDirective } from './draggable.directive';\nimport { DroppableDirective } from './droppable.directive';\nimport { DraggableHelper } from './draggable-helper.provider';\n\n@NgModule({\n  declarations: [DraggableDirective, DroppableDirective],\n  exports: [DraggableDirective, DroppableDirective]\n})\nexport class DragAndDropModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DragAndDropModule,\n      providers: [DraggableHelper]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/draggable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnChanges\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [mwlDraggable]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Inputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dragAxis\n                                    \n                                    \n                                        dragCursor\n                                    \n                                    \n                                        dragSnapGrid\n                                    \n                                    \n                                        dropData\n                                    \n                                    \n                                        ghostDragEnabled\n                                    \n                                    \n                                        validateDrag\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dragEnd\n                                    \n                                    \n                                        dragging\n                                    \n                                    \n                                        dragPointerDown\n                                    \n                                    \n                                        dragStart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                Inputs\n                    \n                        \n                            \n                                \n                                    \n                                    dragAxis\n                                \n                                \n                                    The axis along which the element is draggable\n\n                                      \n                                        Type:    DragAxis\n\n                                      \n                                    \n                                      Default value: { x: true, y: true }\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:64\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragCursor\n                                \n                                \n                                    The cursor to use when dragging the element\n\n                                    \n                                      Default value: MOVE_CURSOR\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:84\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragSnapGrid\n                                \n                                \n                                    Snap all drags to an x / y grid\n\n                                      \n                                        Type:    SnapGrid\n\n                                      \n                                    \n                                      Default value: {}\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:69\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dropData\n                                \n                                \n                                    an object of data you can pass to the drop event\n\n                                      \n                                        Type:    any\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:59\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    ghostDragEnabled\n                                \n                                \n                                    Show a ghost element that shows the drag when dragging\n\n                                      \n                                        Type:    boolean\n\n                                      \n                                    \n                                      Default value: true\n                                    \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:74\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    validateDrag\n                                \n                                \n                                    Allow custom behaviour to control when the element is dragged\n\n                                      \n                                        Type:    ValidateDrag\n\n                                      \n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:79\n                                        \n                                    \n                        \n                    \n            \n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    dragEnd\n                                \n                                \n                                    Called after the element is dragged\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:105\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragging\n                                \n                                \n                                    Called when the element is being dragged\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:100\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragPointerDown\n                                \n                                \n                                    Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:89\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragStart\n                                \n                                \n                                    Called when the element has started to be dragged.\nOnly called after at least one mouse or touch move event\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:95\n                                        \n                                    \n                        \n                    \n            \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { take } from 'rxjs/operators/take';\nimport { takeLast } from 'rxjs/operators/takeLast';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { share } from 'rxjs/operators/share';\nimport { filter } from 'rxjs/operators/filter';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * an object of data you can pass to the drop event\n   */\n  @Input() dropData: any;\n\n  /**\n   * The axis along which the element is draggable\n   */\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  /**\n   * Snap all drags to an x / y grid\n   */\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  /**\n   * Show a ghost element that shows the drag when dragging\n   */\n  @Input() ghostDragEnabled: boolean = true;\n\n  /**\n   * Allow custom behaviour to control when the element is dragged\n   */\n  @Input() validateDrag: ValidateDrag;\n\n  /**\n   * The cursor to use when dragging the element\n   */\n  @Input() dragCursor = MOVE_CURSOR;\n\n  /**\n   * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n   */\n  @Output() dragPointerDown = new EventEmitter();\n\n  /**\n   * Called when the element has started to be dragged.\n   * Only called after at least one mouse or touch move event\n   */\n  @Output() dragStart = new EventEmitter();\n\n  /**\n   * Called when the element is being dragged\n   */\n  @Output() dragging = new EventEmitter();\n\n  /**\n   * Called after the element is dragged\n   */\n  @Output() dragEnd = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable = this.pointerDown\n      .pipe(filter(() => this.canDrag()))\n      .pipe(\n        mergeMap((pointerDownEvent: PointerEvent) => {\n          const currentDrag: Subject = new Subject();\n\n          this.zone.run(() => {\n            this.dragPointerDown.next({ x: 0, y: 0 });\n          });\n\n          const pointerMove: Observable = this.pointerMove\n            .pipe(\n              map((pointerMoveEvent: PointerEvent) => {\n                pointerMoveEvent.event.preventDefault();\n\n                return {\n                  currentDrag,\n                  x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                  y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                  clientX: pointerMoveEvent.clientX,\n                  clientY: pointerMoveEvent.clientY\n                };\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (this.dragSnapGrid.x) {\n                  moveData.x =\n                    Math.floor(moveData.x / this.dragSnapGrid.x) *\n                    this.dragSnapGrid.x;\n                }\n\n                if (this.dragSnapGrid.y) {\n                  moveData.y =\n                    Math.floor(moveData.y / this.dragSnapGrid.y) *\n                    this.dragSnapGrid.y;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (!this.dragAxis.x) {\n                  moveData.x = 0;\n                }\n\n                if (!this.dragAxis.y) {\n                  moveData.y = 0;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              filter(\n                ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n              )\n            )\n            .pipe(takeUntil(merge(this.pointerUp, this.pointerDown)))\n            .pipe(share());\n\n          pointerMove.pipe(take(1)).subscribe(() => {\n            pointerDownEvent.event.preventDefault();\n\n            this.zone.run(() => {\n              this.dragStart.next({ x: 0, y: 0 });\n            });\n\n            this.setCursor(this.dragCursor);\n\n            this.draggableHelper.currentDrag.next(currentDrag);\n          });\n\n          pointerMove.pipe(takeLast(1)).subscribe(({ x, y }) => {\n            this.zone.run(() => {\n              this.dragEnd.next({ x, y });\n            });\n            currentDrag.complete();\n            this.setCssTransform(null);\n            if (this.ghostDragEnabled) {\n              this.renderer.setStyle(\n                this.element.nativeElement,\n                'pointerEvents',\n                null\n              );\n            }\n          });\n\n          return pointerMove;\n        })\n      )\n      .pipe(share());\n\n    merge(\n      pointerDrag.pipe(take(1)).pipe(map(value => [, value])),\n      pointerDrag.pipe(pairwise())\n    )\n      .pipe(\n        filter(([previous, next]) => {\n          if (!previous) {\n            return true;\n          }\n          return previous.x !== next.x || previous.y !== next.y;\n        })\n      )\n      .pipe(map(([previous, next]) => next))\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(this.dragCursor);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor(null);\n  }\n\n  private setCssTransform(value: string | null): void {\n    if (this.ghostDragEnabled) {\n      const transformAttributes = [\n        'transform',\n        '-webkit-transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform'\n      ];\n      transformAttributes.forEach(transformAttribute => {\n        this.renderer.setStyle(\n          this.element.nativeElement,\n          transformAttribute,\n          value\n        );\n      });\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string | null): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach(type => {\n      (this as any).eventListenerSubscriptions[type]();\n      delete (this as any).eventListenerSubscriptions[type];\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DroppableDirective.html":{"url":"directives/DroppableDirective.html","title":"directive - DroppableDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DroppableDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/droppable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [mwlDroppable]\n                    \n\n                \n            \n        \n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        currentDragSubscription\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Outputs\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        dragEnter\n                                    \n                                    \n                                        dragLeave\n                                    \n                                    \n                                        dragOver\n                                    \n                                    \n                                        drop\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(element: ElementRef, draggableHelper: DraggableHelper, zone: NgZone)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:61\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              element\n                                                              \n                                                                        ElementRef\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              draggableHelper\n                                                              \n                                                                        DraggableHelper\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              zone\n                                                              \n                                                                        NgZone\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Outputs\n                    \n                        \n                            \n                                \n                                    \n                                    dragEnter\n                                \n                                \n                                    Called when a draggable element starts overlapping the element\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:44\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragLeave\n                                \n                                \n                                    Called when a draggable element stops overlapping the element\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:49\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    dragOver\n                                \n                                \n                                    Called when a draggable element is moved over the element\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:54\n                                        \n                                    \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    drop\n                                \n                                \n                                    Called when a draggable element is dropped on this element\n\n                                    $event type:    EventEmitter\n\n                                \n                            \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:59\n                                        \n                                    \n                        \n                    \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        currentDragSubscription\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    currentDragSubscription:     Subscription\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Subscription\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:61\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  NgZone\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { filter } from 'rxjs/operators/filter';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nfunction isCoordinateWithinRectangle(\n  clientX: number,\n  clientY: number,\n  rect: ClientRect\n): boolean {\n  return (\n    clientX >= rect.left &&\n    clientX = rect.top &&\n    clientY ();\n\n  /**\n   * Called when a draggable element stops overlapping the element\n   */\n  @Output() dragLeave = new EventEmitter();\n\n  /**\n   * Called when a draggable element is moved over the element\n   */\n  @Output() dragOver = new EventEmitter();\n\n  /**\n   * Called when a draggable element is dropped on this element\n   */\n  @Output() drop = new EventEmitter();\n\n  currentDragSubscription: Subscription;\n\n  constructor(\n    private element: ElementRef,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    interface CurrentDragData {\n      clientX: number;\n      clientY: number;\n      dropData: any;\n    }\n\n    this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(\n      (drag: Subject) => {\n        const droppableRectangle: ClientRect = this.element.nativeElement.getBoundingClientRect();\n\n        let currentDragDropData: any;\n        const overlaps = drag.pipe(\n          map(({ clientX, clientY, dropData }) => {\n            currentDragDropData = dropData;\n            return isCoordinateWithinRectangle(\n              clientX,\n              clientY,\n              droppableRectangle\n            );\n          })\n        );\n\n        const overlapsChanged = overlaps.pipe(distinctUntilChanged());\n\n        let dragOverActive: boolean; // TODO - see if there's a way of doing this via rxjs\n\n        overlapsChanged\n          .pipe(filter(overlapsNow => overlapsNow))\n          .subscribe(() => {\n            dragOverActive = true;\n            this.zone.run(() => {\n              this.dragEnter.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        overlaps.pipe(filter(overlapsNow => overlapsNow)).subscribe(() => {\n          this.zone.run(() => {\n            this.dragOver.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n\n        overlapsChanged\n          .pipe(pairwise())\n          .pipe(\n            filter(([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)\n          )\n          .subscribe(() => {\n            dragOverActive = false;\n            this.zone.run(() => {\n              this.dragLeave.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        drag.pipe(mergeMap(() => overlaps)).subscribe({\n          complete: () => {\n            if (dragOverActive) {\n              this.zone.run(() => {\n                this.drop.next({\n                  dropData: currentDragDropData\n                });\n              });\n            }\n          }\n        });\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.currentDragSubscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Coordinates.html":{"url":"interfaces/Coordinates.html","title":"interface - Coordinates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Coordinates\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/draggable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:28\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:29\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { take } from 'rxjs/operators/take';\nimport { takeLast } from 'rxjs/operators/takeLast';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { share } from 'rxjs/operators/share';\nimport { filter } from 'rxjs/operators/filter';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * an object of data you can pass to the drop event\n   */\n  @Input() dropData: any;\n\n  /**\n   * The axis along which the element is draggable\n   */\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  /**\n   * Snap all drags to an x / y grid\n   */\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  /**\n   * Show a ghost element that shows the drag when dragging\n   */\n  @Input() ghostDragEnabled: boolean = true;\n\n  /**\n   * Allow custom behaviour to control when the element is dragged\n   */\n  @Input() validateDrag: ValidateDrag;\n\n  /**\n   * The cursor to use when dragging the element\n   */\n  @Input() dragCursor = MOVE_CURSOR;\n\n  /**\n   * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n   */\n  @Output() dragPointerDown = new EventEmitter();\n\n  /**\n   * Called when the element has started to be dragged.\n   * Only called after at least one mouse or touch move event\n   */\n  @Output() dragStart = new EventEmitter();\n\n  /**\n   * Called when the element is being dragged\n   */\n  @Output() dragging = new EventEmitter();\n\n  /**\n   * Called after the element is dragged\n   */\n  @Output() dragEnd = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable = this.pointerDown\n      .pipe(filter(() => this.canDrag()))\n      .pipe(\n        mergeMap((pointerDownEvent: PointerEvent) => {\n          const currentDrag: Subject = new Subject();\n\n          this.zone.run(() => {\n            this.dragPointerDown.next({ x: 0, y: 0 });\n          });\n\n          const pointerMove: Observable = this.pointerMove\n            .pipe(\n              map((pointerMoveEvent: PointerEvent) => {\n                pointerMoveEvent.event.preventDefault();\n\n                return {\n                  currentDrag,\n                  x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                  y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                  clientX: pointerMoveEvent.clientX,\n                  clientY: pointerMoveEvent.clientY\n                };\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (this.dragSnapGrid.x) {\n                  moveData.x =\n                    Math.floor(moveData.x / this.dragSnapGrid.x) *\n                    this.dragSnapGrid.x;\n                }\n\n                if (this.dragSnapGrid.y) {\n                  moveData.y =\n                    Math.floor(moveData.y / this.dragSnapGrid.y) *\n                    this.dragSnapGrid.y;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (!this.dragAxis.x) {\n                  moveData.x = 0;\n                }\n\n                if (!this.dragAxis.y) {\n                  moveData.y = 0;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              filter(\n                ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n              )\n            )\n            .pipe(takeUntil(merge(this.pointerUp, this.pointerDown)))\n            .pipe(share());\n\n          pointerMove.pipe(take(1)).subscribe(() => {\n            pointerDownEvent.event.preventDefault();\n\n            this.zone.run(() => {\n              this.dragStart.next({ x: 0, y: 0 });\n            });\n\n            this.setCursor(this.dragCursor);\n\n            this.draggableHelper.currentDrag.next(currentDrag);\n          });\n\n          pointerMove.pipe(takeLast(1)).subscribe(({ x, y }) => {\n            this.zone.run(() => {\n              this.dragEnd.next({ x, y });\n            });\n            currentDrag.complete();\n            this.setCssTransform(null);\n            if (this.ghostDragEnabled) {\n              this.renderer.setStyle(\n                this.element.nativeElement,\n                'pointerEvents',\n                null\n              );\n            }\n          });\n\n          return pointerMove;\n        })\n      )\n      .pipe(share());\n\n    merge(\n      pointerDrag.pipe(take(1)).pipe(map(value => [, value])),\n      pointerDrag.pipe(pairwise())\n    )\n      .pipe(\n        filter(([previous, next]) => {\n          if (!previous) {\n            return true;\n          }\n          return previous.x !== next.x || previous.y !== next.y;\n        })\n      )\n      .pipe(map(([previous, next]) => next))\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(this.dragCursor);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor(null);\n  }\n\n  private setCssTransform(value: string | null): void {\n    if (this.ghostDragEnabled) {\n      const transformAttributes = [\n        'transform',\n        '-webkit-transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform'\n      ];\n      transformAttributes.forEach(transformAttribute => {\n        this.renderer.setStyle(\n          this.element.nativeElement,\n          transformAttribute,\n          value\n        );\n      });\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string | null): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach(type => {\n      (this as any).eventListenerSubscriptions[type]();\n      delete (this as any).eventListenerSubscriptions[type];\n    });\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragAxis.html":{"url":"interfaces/DragAxis.html","title":"interface - DragAxis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragAxis\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/draggable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:33\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:34\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { take } from 'rxjs/operators/take';\nimport { takeLast } from 'rxjs/operators/takeLast';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { share } from 'rxjs/operators/share';\nimport { filter } from 'rxjs/operators/filter';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * an object of data you can pass to the drop event\n   */\n  @Input() dropData: any;\n\n  /**\n   * The axis along which the element is draggable\n   */\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  /**\n   * Snap all drags to an x / y grid\n   */\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  /**\n   * Show a ghost element that shows the drag when dragging\n   */\n  @Input() ghostDragEnabled: boolean = true;\n\n  /**\n   * Allow custom behaviour to control when the element is dragged\n   */\n  @Input() validateDrag: ValidateDrag;\n\n  /**\n   * The cursor to use when dragging the element\n   */\n  @Input() dragCursor = MOVE_CURSOR;\n\n  /**\n   * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n   */\n  @Output() dragPointerDown = new EventEmitter();\n\n  /**\n   * Called when the element has started to be dragged.\n   * Only called after at least one mouse or touch move event\n   */\n  @Output() dragStart = new EventEmitter();\n\n  /**\n   * Called when the element is being dragged\n   */\n  @Output() dragging = new EventEmitter();\n\n  /**\n   * Called after the element is dragged\n   */\n  @Output() dragEnd = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable = this.pointerDown\n      .pipe(filter(() => this.canDrag()))\n      .pipe(\n        mergeMap((pointerDownEvent: PointerEvent) => {\n          const currentDrag: Subject = new Subject();\n\n          this.zone.run(() => {\n            this.dragPointerDown.next({ x: 0, y: 0 });\n          });\n\n          const pointerMove: Observable = this.pointerMove\n            .pipe(\n              map((pointerMoveEvent: PointerEvent) => {\n                pointerMoveEvent.event.preventDefault();\n\n                return {\n                  currentDrag,\n                  x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                  y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                  clientX: pointerMoveEvent.clientX,\n                  clientY: pointerMoveEvent.clientY\n                };\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (this.dragSnapGrid.x) {\n                  moveData.x =\n                    Math.floor(moveData.x / this.dragSnapGrid.x) *\n                    this.dragSnapGrid.x;\n                }\n\n                if (this.dragSnapGrid.y) {\n                  moveData.y =\n                    Math.floor(moveData.y / this.dragSnapGrid.y) *\n                    this.dragSnapGrid.y;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (!this.dragAxis.x) {\n                  moveData.x = 0;\n                }\n\n                if (!this.dragAxis.y) {\n                  moveData.y = 0;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              filter(\n                ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n              )\n            )\n            .pipe(takeUntil(merge(this.pointerUp, this.pointerDown)))\n            .pipe(share());\n\n          pointerMove.pipe(take(1)).subscribe(() => {\n            pointerDownEvent.event.preventDefault();\n\n            this.zone.run(() => {\n              this.dragStart.next({ x: 0, y: 0 });\n            });\n\n            this.setCursor(this.dragCursor);\n\n            this.draggableHelper.currentDrag.next(currentDrag);\n          });\n\n          pointerMove.pipe(takeLast(1)).subscribe(({ x, y }) => {\n            this.zone.run(() => {\n              this.dragEnd.next({ x, y });\n            });\n            currentDrag.complete();\n            this.setCssTransform(null);\n            if (this.ghostDragEnabled) {\n              this.renderer.setStyle(\n                this.element.nativeElement,\n                'pointerEvents',\n                null\n              );\n            }\n          });\n\n          return pointerMove;\n        })\n      )\n      .pipe(share());\n\n    merge(\n      pointerDrag.pipe(take(1)).pipe(map(value => [, value])),\n      pointerDrag.pipe(pairwise())\n    )\n      .pipe(\n        filter(([previous, next]) => {\n          if (!previous) {\n            return true;\n          }\n          return previous.x !== next.x || previous.y !== next.y;\n        })\n      )\n      .pipe(map(([previous, next]) => next))\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(this.dragCursor);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor(null);\n  }\n\n  private setCssTransform(value: string | null): void {\n    if (this.ghostDragEnabled) {\n      const transformAttributes = [\n        'transform',\n        '-webkit-transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform'\n      ];\n      transformAttributes.forEach(transformAttribute => {\n        this.renderer.setStyle(\n          this.element.nativeElement,\n          transformAttribute,\n          value\n        );\n      });\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string | null): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach(type => {\n      (this as any).eventListenerSubscriptions[type]();\n      delete (this as any).eventListenerSubscriptions[type];\n    });\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropData.html":{"url":"interfaces/DropData.html","title":"interface - DropData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropData\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/droppable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dropData\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dropData\n                                    \n                                \n                                \n                                    \n                                        dropData:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/droppable.directive.ts:34\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  NgZone\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { filter } from 'rxjs/operators/filter';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nfunction isCoordinateWithinRectangle(\n  clientX: number,\n  clientY: number,\n  rect: ClientRect\n): boolean {\n  return (\n    clientX >= rect.left &&\n    clientX = rect.top &&\n    clientY ();\n\n  /**\n   * Called when a draggable element stops overlapping the element\n   */\n  @Output() dragLeave = new EventEmitter();\n\n  /**\n   * Called when a draggable element is moved over the element\n   */\n  @Output() dragOver = new EventEmitter();\n\n  /**\n   * Called when a draggable element is dropped on this element\n   */\n  @Output() drop = new EventEmitter();\n\n  currentDragSubscription: Subscription;\n\n  constructor(\n    private element: ElementRef,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    interface CurrentDragData {\n      clientX: number;\n      clientY: number;\n      dropData: any;\n    }\n\n    this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(\n      (drag: Subject) => {\n        const droppableRectangle: ClientRect = this.element.nativeElement.getBoundingClientRect();\n\n        let currentDragDropData: any;\n        const overlaps = drag.pipe(\n          map(({ clientX, clientY, dropData }) => {\n            currentDragDropData = dropData;\n            return isCoordinateWithinRectangle(\n              clientX,\n              clientY,\n              droppableRectangle\n            );\n          })\n        );\n\n        const overlapsChanged = overlaps.pipe(distinctUntilChanged());\n\n        let dragOverActive: boolean; // TODO - see if there's a way of doing this via rxjs\n\n        overlapsChanged\n          .pipe(filter(overlapsNow => overlapsNow))\n          .subscribe(() => {\n            dragOverActive = true;\n            this.zone.run(() => {\n              this.dragEnter.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        overlaps.pipe(filter(overlapsNow => overlapsNow)).subscribe(() => {\n          this.zone.run(() => {\n            this.dragOver.next({\n              dropData: currentDragDropData\n            });\n          });\n        });\n\n        overlapsChanged\n          .pipe(pairwise())\n          .pipe(\n            filter(([didOverlap, overlapsNow]) => didOverlap && !overlapsNow)\n          )\n          .subscribe(() => {\n            dragOverActive = false;\n            this.zone.run(() => {\n              this.dragLeave.next({\n                dropData: currentDragDropData\n              });\n            });\n          });\n\n        drag.pipe(mergeMap(() => overlaps)).subscribe({\n          complete: () => {\n            if (dragOverActive) {\n              this.zone.run(() => {\n                this.drop.next({\n                  dropData: currentDragDropData\n                });\n              });\n            }\n          }\n        });\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.currentDragSubscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PointerEvent.html":{"url":"interfaces/PointerEvent.html","title":"interface - PointerEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PointerEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/draggable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientX\n                                \n                                \n                                        clientY\n                                \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientX\n                                    \n                                \n                                \n                                    \n                                        clientX:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:45\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientY\n                                    \n                                \n                                \n                                    \n                                        clientY:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:46\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     MouseEvent | TouchEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent | TouchEvent\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:47\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { take } from 'rxjs/operators/take';\nimport { takeLast } from 'rxjs/operators/takeLast';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { share } from 'rxjs/operators/share';\nimport { filter } from 'rxjs/operators/filter';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * an object of data you can pass to the drop event\n   */\n  @Input() dropData: any;\n\n  /**\n   * The axis along which the element is draggable\n   */\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  /**\n   * Snap all drags to an x / y grid\n   */\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  /**\n   * Show a ghost element that shows the drag when dragging\n   */\n  @Input() ghostDragEnabled: boolean = true;\n\n  /**\n   * Allow custom behaviour to control when the element is dragged\n   */\n  @Input() validateDrag: ValidateDrag;\n\n  /**\n   * The cursor to use when dragging the element\n   */\n  @Input() dragCursor = MOVE_CURSOR;\n\n  /**\n   * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n   */\n  @Output() dragPointerDown = new EventEmitter();\n\n  /**\n   * Called when the element has started to be dragged.\n   * Only called after at least one mouse or touch move event\n   */\n  @Output() dragStart = new EventEmitter();\n\n  /**\n   * Called when the element is being dragged\n   */\n  @Output() dragging = new EventEmitter();\n\n  /**\n   * Called after the element is dragged\n   */\n  @Output() dragEnd = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable = this.pointerDown\n      .pipe(filter(() => this.canDrag()))\n      .pipe(\n        mergeMap((pointerDownEvent: PointerEvent) => {\n          const currentDrag: Subject = new Subject();\n\n          this.zone.run(() => {\n            this.dragPointerDown.next({ x: 0, y: 0 });\n          });\n\n          const pointerMove: Observable = this.pointerMove\n            .pipe(\n              map((pointerMoveEvent: PointerEvent) => {\n                pointerMoveEvent.event.preventDefault();\n\n                return {\n                  currentDrag,\n                  x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                  y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                  clientX: pointerMoveEvent.clientX,\n                  clientY: pointerMoveEvent.clientY\n                };\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (this.dragSnapGrid.x) {\n                  moveData.x =\n                    Math.floor(moveData.x / this.dragSnapGrid.x) *\n                    this.dragSnapGrid.x;\n                }\n\n                if (this.dragSnapGrid.y) {\n                  moveData.y =\n                    Math.floor(moveData.y / this.dragSnapGrid.y) *\n                    this.dragSnapGrid.y;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (!this.dragAxis.x) {\n                  moveData.x = 0;\n                }\n\n                if (!this.dragAxis.y) {\n                  moveData.y = 0;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              filter(\n                ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n              )\n            )\n            .pipe(takeUntil(merge(this.pointerUp, this.pointerDown)))\n            .pipe(share());\n\n          pointerMove.pipe(take(1)).subscribe(() => {\n            pointerDownEvent.event.preventDefault();\n\n            this.zone.run(() => {\n              this.dragStart.next({ x: 0, y: 0 });\n            });\n\n            this.setCursor(this.dragCursor);\n\n            this.draggableHelper.currentDrag.next(currentDrag);\n          });\n\n          pointerMove.pipe(takeLast(1)).subscribe(({ x, y }) => {\n            this.zone.run(() => {\n              this.dragEnd.next({ x, y });\n            });\n            currentDrag.complete();\n            this.setCssTransform(null);\n            if (this.ghostDragEnabled) {\n              this.renderer.setStyle(\n                this.element.nativeElement,\n                'pointerEvents',\n                null\n              );\n            }\n          });\n\n          return pointerMove;\n        })\n      )\n      .pipe(share());\n\n    merge(\n      pointerDrag.pipe(take(1)).pipe(map(value => [, value])),\n      pointerDrag.pipe(pairwise())\n    )\n      .pipe(\n        filter(([previous, next]) => {\n          if (!previous) {\n            return true;\n          }\n          return previous.x !== next.x || previous.y !== next.y;\n        })\n      )\n      .pipe(map(([previous, next]) => next))\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(this.dragCursor);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor(null);\n  }\n\n  private setCssTransform(value: string | null): void {\n    if (this.ghostDragEnabled) {\n      const transformAttributes = [\n        'transform',\n        '-webkit-transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform'\n      ];\n      transformAttributes.forEach(transformAttribute => {\n        this.renderer.setStyle(\n          this.element.nativeElement,\n          transformAttribute,\n          value\n        );\n      });\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string | null): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach(type => {\n      (this as any).eventListenerSubscriptions[type]();\n      delete (this as any).eventListenerSubscriptions[type];\n    });\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnapGrid.html":{"url":"interfaces/SnapGrid.html","title":"interface - SnapGrid","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SnapGrid\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/draggable.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:38\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/draggable.directive.ts:39\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Directive,\n  OnInit,\n  ElementRef,\n  Renderer2,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnChanges,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { map } from 'rxjs/operators/map';\nimport { mergeMap } from 'rxjs/operators/mergeMap';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { take } from 'rxjs/operators/take';\nimport { takeLast } from 'rxjs/operators/takeLast';\nimport { pairwise } from 'rxjs/operators/pairwise';\nimport { share } from 'rxjs/operators/share';\nimport { filter } from 'rxjs/operators/filter';\nimport { DraggableHelper } from './draggable-helper.provider';\n\nexport interface Coordinates {\n  x: number;\n  y: number;\n}\n\nexport interface DragAxis {\n  x: boolean;\n  y: boolean;\n}\n\nexport interface SnapGrid {\n  x?: number;\n  y?: number;\n}\n\nexport type ValidateDrag = (coordinates: Coordinates) => boolean;\n\nexport interface PointerEvent {\n  clientX: number;\n  clientY: number;\n  event: MouseEvent | TouchEvent;\n}\n\nconst MOVE_CURSOR: string = 'move';\n\n@Directive({\n  selector: '[mwlDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnChanges, OnDestroy {\n  /**\n   * an object of data you can pass to the drop event\n   */\n  @Input() dropData: any;\n\n  /**\n   * The axis along which the element is draggable\n   */\n  @Input() dragAxis: DragAxis = { x: true, y: true };\n\n  /**\n   * Snap all drags to an x / y grid\n   */\n  @Input() dragSnapGrid: SnapGrid = {};\n\n  /**\n   * Show a ghost element that shows the drag when dragging\n   */\n  @Input() ghostDragEnabled: boolean = true;\n\n  /**\n   * Allow custom behaviour to control when the element is dragged\n   */\n  @Input() validateDrag: ValidateDrag;\n\n  /**\n   * The cursor to use when dragging the element\n   */\n  @Input() dragCursor = MOVE_CURSOR;\n\n  /**\n   * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n   */\n  @Output() dragPointerDown = new EventEmitter();\n\n  /**\n   * Called when the element has started to be dragged.\n   * Only called after at least one mouse or touch move event\n   */\n  @Output() dragStart = new EventEmitter();\n\n  /**\n   * Called when the element is being dragged\n   */\n  @Output() dragging = new EventEmitter();\n\n  /**\n   * Called after the element is dragged\n   */\n  @Output() dragEnd = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  pointerDown: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerMove: Subject = new Subject();\n\n  /**\n   * @hidden\n   */\n  pointerUp: Subject = new Subject();\n\n  private eventListenerSubscriptions: {\n    mousemove?: () => void;\n    mousedown?: () => void;\n    mouseup?: () => void;\n    mouseenter?: () => void;\n    mouseleave?: () => void;\n    touchstart?: () => void;\n    touchmove?: () => void;\n    touchend?: () => void;\n    touchcancel?: () => void;\n  } = {};\n\n  /**\n   * @hidden\n   */\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer2,\n    private draggableHelper: DraggableHelper,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.checkEventListeners();\n\n    const pointerDrag: Observable = this.pointerDown\n      .pipe(filter(() => this.canDrag()))\n      .pipe(\n        mergeMap((pointerDownEvent: PointerEvent) => {\n          const currentDrag: Subject = new Subject();\n\n          this.zone.run(() => {\n            this.dragPointerDown.next({ x: 0, y: 0 });\n          });\n\n          const pointerMove: Observable = this.pointerMove\n            .pipe(\n              map((pointerMoveEvent: PointerEvent) => {\n                pointerMoveEvent.event.preventDefault();\n\n                return {\n                  currentDrag,\n                  x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                  y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                  clientX: pointerMoveEvent.clientX,\n                  clientY: pointerMoveEvent.clientY\n                };\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (this.dragSnapGrid.x) {\n                  moveData.x =\n                    Math.floor(moveData.x / this.dragSnapGrid.x) *\n                    this.dragSnapGrid.x;\n                }\n\n                if (this.dragSnapGrid.y) {\n                  moveData.y =\n                    Math.floor(moveData.y / this.dragSnapGrid.y) *\n                    this.dragSnapGrid.y;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              map((moveData: Coordinates) => {\n                if (!this.dragAxis.x) {\n                  moveData.x = 0;\n                }\n\n                if (!this.dragAxis.y) {\n                  moveData.y = 0;\n                }\n\n                return moveData;\n              })\n            )\n            .pipe(\n              filter(\n                ({ x, y }) => !this.validateDrag || this.validateDrag({ x, y })\n              )\n            )\n            .pipe(takeUntil(merge(this.pointerUp, this.pointerDown)))\n            .pipe(share());\n\n          pointerMove.pipe(take(1)).subscribe(() => {\n            pointerDownEvent.event.preventDefault();\n\n            this.zone.run(() => {\n              this.dragStart.next({ x: 0, y: 0 });\n            });\n\n            this.setCursor(this.dragCursor);\n\n            this.draggableHelper.currentDrag.next(currentDrag);\n          });\n\n          pointerMove.pipe(takeLast(1)).subscribe(({ x, y }) => {\n            this.zone.run(() => {\n              this.dragEnd.next({ x, y });\n            });\n            currentDrag.complete();\n            this.setCssTransform(null);\n            if (this.ghostDragEnabled) {\n              this.renderer.setStyle(\n                this.element.nativeElement,\n                'pointerEvents',\n                null\n              );\n            }\n          });\n\n          return pointerMove;\n        })\n      )\n      .pipe(share());\n\n    merge(\n      pointerDrag.pipe(take(1)).pipe(map(value => [, value])),\n      pointerDrag.pipe(pairwise())\n    )\n      .pipe(\n        filter(([previous, next]) => {\n          if (!previous) {\n            return true;\n          }\n          return previous.x !== next.x || previous.y !== next.y;\n        })\n      )\n      .pipe(map(([previous, next]) => next))\n      .subscribe(({ x, y, currentDrag, clientX, clientY }) => {\n        this.zone.run(() => {\n          this.dragging.next({ x, y });\n        });\n        if (this.ghostDragEnabled) {\n          this.renderer.setStyle(\n            this.element.nativeElement,\n            'pointerEvents',\n            'none'\n          );\n        }\n        this.setCssTransform(`translate(${x}px, ${y}px)`);\n        currentDrag.next({\n          clientX,\n          clientY,\n          dropData: this.dropData\n        });\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragAxis']) {\n      this.checkEventListeners();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n    this.pointerDown.complete();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  private checkEventListeners(): void {\n    const canDrag: boolean = this.canDrag();\n    const hasEventListeners: boolean =\n      Object.keys(this.eventListenerSubscriptions).length > 0;\n\n    if (canDrag && !hasEventListeners) {\n      this.zone.runOutsideAngular(() => {\n        this.eventListenerSubscriptions.mousedown = this.renderer.listen(\n          this.element.nativeElement,\n          'mousedown',\n          (event: MouseEvent) => {\n            this.onMouseDown(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseup = this.renderer.listen(\n          'document',\n          'mouseup',\n          (event: MouseEvent) => {\n            this.onMouseUp(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchstart = this.renderer.listen(\n          this.element.nativeElement,\n          'touchstart',\n          (event: TouchEvent) => {\n            this.onTouchStart(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchend = this.renderer.listen(\n          'document',\n          'touchend',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.touchcancel = this.renderer.listen(\n          'document',\n          'touchcancel',\n          (event: TouchEvent) => {\n            this.onTouchEnd(event);\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseenter = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseenter',\n          () => {\n            this.onMouseEnter();\n          }\n        );\n\n        this.eventListenerSubscriptions.mouseleave = this.renderer.listen(\n          this.element.nativeElement,\n          'mouseleave',\n          () => {\n            this.onMouseLeave();\n          }\n        );\n      });\n    } else if (!canDrag && hasEventListeners) {\n      this.unsubscribeEventListeners();\n    }\n  }\n\n  private onMouseDown(event: MouseEvent): void {\n    if (!this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove = this.renderer.listen(\n        'document',\n        'mousemove',\n        (mouseMoveEvent: MouseEvent) => {\n          this.pointerMove.next({\n            event: mouseMoveEvent,\n            clientX: mouseMoveEvent.clientX,\n            clientY: mouseMoveEvent.clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onMouseUp(event: MouseEvent): void {\n    if (this.eventListenerSubscriptions.mousemove) {\n      this.eventListenerSubscriptions.mousemove();\n      delete this.eventListenerSubscriptions.mousemove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.clientX,\n      clientY: event.clientY\n    });\n  }\n\n  private onTouchStart(event: TouchEvent): void {\n    if (!this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove = this.renderer.listen(\n        'document',\n        'touchmove',\n        (touchMoveEvent: TouchEvent) => {\n          this.pointerMove.next({\n            event: touchMoveEvent,\n            clientX: touchMoveEvent.targetTouches[0].clientX,\n            clientY: touchMoveEvent.targetTouches[0].clientY\n          });\n        }\n      );\n    }\n    this.pointerDown.next({\n      event,\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY\n    });\n  }\n\n  private onTouchEnd(event: TouchEvent): void {\n    if (this.eventListenerSubscriptions.touchmove) {\n      this.eventListenerSubscriptions.touchmove();\n      delete this.eventListenerSubscriptions.touchmove;\n    }\n    this.pointerUp.next({\n      event,\n      clientX: event.changedTouches[0].clientX,\n      clientY: event.changedTouches[0].clientY\n    });\n  }\n\n  private onMouseEnter(): void {\n    this.setCursor(this.dragCursor);\n  }\n\n  private onMouseLeave(): void {\n    this.setCursor(null);\n  }\n\n  private setCssTransform(value: string | null): void {\n    if (this.ghostDragEnabled) {\n      const transformAttributes = [\n        'transform',\n        '-webkit-transform',\n        '-ms-transform',\n        '-moz-transform',\n        '-o-transform'\n      ];\n      transformAttributes.forEach(transformAttribute => {\n        this.renderer.setStyle(\n          this.element.nativeElement,\n          transformAttribute,\n          value\n        );\n      });\n    }\n  }\n\n  private canDrag(): boolean {\n    return this.dragAxis.x || this.dragAxis.y;\n  }\n\n  private setCursor(value: string | null): void {\n    this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n  }\n\n  private unsubscribeEventListeners(): void {\n    Object.keys(this.eventListenerSubscriptions).forEach(type => {\n      (this as any).eventListenerSubscriptions[type]();\n      delete (this as any).eventListenerSubscriptions[type];\n    });\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isCoordinateWithinRectangle\n                        \n                    \n                \n            \n        \n    \n\n\n    src/droppable.directive.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                isCoordinateWithinRectangle\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    isCoordinateWithinRectangle(clientX: number, clientY: number, rect: typeReference)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Type\n                                                    Optional\n                                                    Description\n                                                \n                                            \n                                            \n                                                    \n                                                      clientX\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      clientY\n                                                      \n                                                              number\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                                    \n                                                      rect\n                                                      \n                                                              typeReference\n                                                      \n                                                      \n                                                      \n                                                      \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MOVE_CURSOR\n                        \n                    \n                \n            \n        \n    \n\n\n    src/draggable.directive.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                MOVE_CURSOR\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            MOVE_CURSOR:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : 'move'\n                            \n                        \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ValidateDrag\n                        \n                    \n                \n            \n        \n    \n\n\n    src/draggable.directive.ts\n    \n            \n                \n                    \n                        \n                            \n                            ValidateDrag\n                        \n                    \n                    \n                        \n                            ValidateDrag()\n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
